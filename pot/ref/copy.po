msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-09-10 06:57+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /tmp/cicero-tkrh/ref/copy.xml:10(refentrytitle) /tmp/cicero-tkrh/ref/copy.xml:16(refname) /tmp/cicero-tkrh/ref/copy.xml:21(primary) 
msgid "COPY"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:11(manvolnum) 
msgid "7"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:12(refmiscinfo) 
msgid "SQL - Language Statements"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:17(refpurpose) 
msgid "copy data between a file and a table"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:26(replaceable) /tmp/cicero-tkrh/ref/copy.xml:30(replaceable) /tmp/cicero-tkrh/ref/copy.xml:86(replaceable) 
msgid "table_name"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:26(replaceable) /tmp/cicero-tkrh/ref/copy.xml:30(replaceable) /tmp/cicero-tkrh/ref/copy.xml:43(replaceable) /tmp/cicero-tkrh/ref/copy.xml:44(replaceable) /tmp/cicero-tkrh/ref/copy.xml:95(replaceable) 
msgid "column"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:27(replaceable) /tmp/cicero-tkrh/ref/copy.xml:31(replaceable) /tmp/cicero-tkrh/ref/copy.xml:117(replaceable) 
msgid "filename"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:28(replaceable) /tmp/cicero-tkrh/ref/copy.xml:32(replaceable) /tmp/cicero-tkrh/ref/copy.xml:34(replaceable) 
msgid "option"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:30(replaceable) /tmp/cicero-tkrh/ref/copy.xml:105(replaceable) 
msgid "query"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:34(phrase) 
msgid "where <placeholder-1/> can be one of:"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:36(replaceable) 
msgid "format_name"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:37(replaceable) /tmp/cicero-tkrh/ref/copy.xml:40(replaceable) /tmp/cicero-tkrh/ref/copy.xml:146(replaceable) 
msgid "boolean"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:38(replaceable) 
msgid "delimiter_character"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:39(replaceable) 
msgid "null_string"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:41(replaceable) 
msgid "quote_character"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:42(replaceable) 
msgid "escape_character"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:45(replaceable) 
msgid "encoding_name"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:25(synopsis) 
#, no-wrap
msgid "\nCOPY <placeholder-1/> [ ( <placeholder-2/> [, ...] ) ]\n    FROM { '<placeholder-3/>' | STDIN }\n    [ [ WITH ] ( <placeholder-4/> [, ...] ) ]\n\nCOPY { <placeholder-5/> [ ( <placeholder-6/> [, ...] ) ] | ( <placeholder-7/> ) }\n    TO { '<placeholder-8/>' | STDOUT }\n    [ [ WITH ] ( <placeholder-9/> [, ...] ) ]\n\n<placeholder-10/>\n\n    FORMAT <placeholder-11/>\n    OIDS [ <placeholder-12/> ]\n    DELIMITER '<placeholder-13/>'\n    NULL '<placeholder-14/>'\n    HEADER [ <placeholder-15/> ]\n    QUOTE '<placeholder-16/>'\n    ESCAPE '<placeholder-17/>'\n    FORCE_QUOTE { ( <placeholder-18/> [, ...] ) | * }\n    FORCE_NOT_NULL ( <placeholder-19/> [, ...] ) |\n    ENCODING '<placeholder-20/>'\n"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:50(title) 
msgid "Description"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:52(para) 
msgid "<command>COPY</command> moves data between <productname>PostgreSQL</productname> tables and standard file-system files. <command>COPY TO</command> copies the contents of a table <emphasis>to</emphasis> a file, while <command>COPY FROM</command> copies data <emphasis>from</emphasis> a file to a table (appending the data to whatever is in the table already). <command>COPY TO</command> can also copy the results of a <command>SELECT</command> query."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:62(para) 
msgid "If a list of columns is specified, <command>COPY</command> will only copy the data in the specified columns to or from the file. If there are any columns in the table that are not in the column list, <command>COPY FROM</command> will insert the default values for those columns."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:70(para) 
msgid "<command>COPY</command> with a file name instructs the <productname>PostgreSQL</productname> server to directly read from or write to a file. The file must be accessible to the server and the name must be specified from the viewpoint of the server. When <literal>STDIN</literal> or <literal>STDOUT</literal> is specified, data is transmitted via the connection between the client and the server."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:82(title) 
msgid "Parameters"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:88(para) 
msgid "The name (optionally schema-qualified) of an existing table."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:97(para) 
msgid "An optional list of columns to be copied. If no column list is specified, all columns of the table will be copied."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:107(para) 
msgid "A <xref linkend=\"sql-select\"/> or <xref linkend=\"sql-values\"/> command whose results are to be copied. Note that parentheses are required around the query."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:119(para) 
msgid "The absolute path name of the input or output file. Windows users might need to use an <literal>E''</literal> string and double any backslashes used in the path name."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:128(literal) 
msgid "STDIN"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:130(para) 
msgid "Specifies that input comes from the client application."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:137(literal) 
msgid "STDOUT"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:139(para) 
msgid "Specifies that output goes to the client application."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:148(para) 
msgid "Specifies whether the selected option should be turned on or off. You can write <literal>TRUE</literal>, <literal>ON</literal>, or <literal>1</literal> to enable the option, and <literal>FALSE</literal>, <literal>OFF</literal>, or <literal>0</literal> to disable it. The <replaceable class=\"parameter\">boolean</replaceable> value can also be omitted, in which case <literal>TRUE</literal> is assumed."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:160(literal) 
msgid "FORMAT"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:162(para) 
msgid "Selects the data format to be read or written: <literal>text</literal>, <literal>csv</literal> (Comma Separated Values), or <literal>binary</literal>. The default is <literal>text</literal>."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:173(literal) 
msgid "OIDS"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:175(para) 
msgid "Specifies copying the OID for each row. (An error is raised if <literal>OIDS</literal> is specified for a table that does not have OIDs, or in the case of copying a <replaceable class=\"parameter\">query</replaceable>.)"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:185(literal) 
msgid "DELIMITER"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:187(para) 
msgid "Specifies the character that separates columns within each row (line) of the file. The default is a tab character in text format, a comma in <literal>CSV</literal> format. This must be a single one-byte character. This option is not allowed when using <literal>binary</literal> format."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:198(literal) 
msgid "NULL"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:200(para) 
msgid "Specifies the string that represents a null value. The default is <literal>\\N</literal> (backslash-N) in text format, and an unquoted empty string in <literal>CSV</literal> format. You might prefer an empty string even in text format for cases where you don't want to distinguish nulls from empty strings. This option is not allowed when using <literal>binary</literal> format."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:210(para) 
msgid "When using <command>COPY FROM</command>, any data item that matches this string will be stored as a null value, so you should make sure that you use the same string as you used with <command>COPY TO</command>."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:222(literal) 
msgid "HEADER"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:224(para) 
msgid "Specifies that the file contains a header line with the names of each column in the file. On output, the first line contains the column names from the table, and on input, the first line is ignored. This option is allowed only when using <literal>CSV</literal> format."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:234(literal) 
msgid "QUOTE"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:236(para) 
msgid "Specifies the quoting character to be used when a data value is quoted. The default is double-quote. This must be a single one-byte character. This option is allowed only when using <literal>CSV</literal> format."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:246(literal) 
msgid "ESCAPE"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:248(para) 
msgid "Specifies the character that should appear before a data character that matches the <literal>QUOTE</literal> value. The default is the same as the <literal>QUOTE</literal> value (so that the quoting character is doubled if it appears in the data). This must be a single one-byte character. This option is allowed only when using <literal>CSV</literal> format."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:260(literal) 
msgid "FORCE_QUOTE"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:262(para) 
msgid "Forces quoting to be used for all non-<literal>NULL</literal> values in each specified column. <literal>NULL</literal> output is never quoted. If <literal>*</literal> is specified, non-<literal>NULL</literal> values will be quoted in all columns. This option is allowed only in <command>COPY TO</command>, and only when using <literal>CSV</literal> format."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:274(literal) 
msgid "FORCE_NOT_NULL"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:276(para) 
msgid "Do not match the specified columns' values against the null string. In the default case where the null string is empty, this means that empty values will be read as zero-length strings rather than nulls, even when they are not quoted. This option is allowed only in <command>COPY FROM</command>, and only when using <literal>CSV</literal> format."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:288(literal) 
msgid "ENCODING"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:290(para) 
msgid "Specifies that the file is encoded in the <replaceable class=\"parameter\">encoding_name</replaceable>. If this option is omitted, the current client encoding is used. See the Notes below for more details."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:303(title) 
msgid "Outputs"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:305(para) 
msgid "On successful completion, a <command>COPY</command> command returns a command tag of the form <screen>\nCOPY <replaceable class=\"parameter\">count</replaceable>\n</screen> The <replaceable class=\"parameter\">count</replaceable> is the number of rows copied."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:317(title) 
msgid "Notes"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:319(para) 
msgid "<command>COPY</command> can only be used with plain tables, not with views. However, you can write <literal>COPY (SELECT * FROM <replaceable class=\"parameter\">viewname</replaceable>) TO ...</literal>."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:325(para) 
msgid "<command>COPY</command> only deals with the specific table named; it does not copy data to or from child tables. Thus for example <literal>COPY <replaceable class=\"parameter\">table</replaceable> TO</literal> shows the same data as <literal>SELECT * FROM ONLY <replaceable class=\"parameter\">table</replaceable></literal>. But <literal>COPY (SELECT * FROM <replaceable class=\"parameter\">table</replaceable>) TO ...</literal> can be used to dump all of the data in an inheritance hierarchy."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:335(para) 
msgid "You must have select privilege on the table whose values are read by <command>COPY TO</command>, and insert privilege on the table into which values are inserted by <command>COPY FROM</command>. It is sufficient to have column privileges on the column(s) listed in the command."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:343(para) 
msgid "Files named in a <command>COPY</command> command are read or written directly by the server, not by the client application. Therefore, they must reside on or be accessible to the database server machine, not the client. They must be accessible to and readable or writable by the <productname>PostgreSQL</productname> user (the user ID the server runs as), not the client. <command>COPY</command> naming a file is only allowed to database superusers, since it allows reading or writing any file that the server has privileges to access."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:354(para) 
msgid "Do not confuse <command>COPY</command> with the <application>psql</application> instruction <command>\\copy</command>. <command>\\copy</command> invokes <command>COPY FROM STDIN</command> or <command>COPY TO STDOUT</command>, and then fetches/stores the data in a file accessible to the <application>psql</application> client. Thus, file accessibility and access rights depend on the client rather than the server when <command>\\copy</command> is used."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:365(para) 
msgid "It is recommended that the file name used in <command>COPY</command> always be specified as an absolute path. This is enforced by the server in the case of <command>COPY TO</command>, but for <command>COPY FROM</command> you do have the option of reading from a file specified by a relative path. The path will be interpreted relative to the working directory of the server process (normally the cluster's data directory), not the client's working directory."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:375(para) 
msgid "<command>COPY FROM</command> will invoke any triggers and check constraints on the destination table. However, it will not invoke rules."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:380(para) 
msgid "<command>COPY</command> input and output is affected by <varname>DateStyle</varname>. To ensure portability to other <productname>PostgreSQL</productname> installations that might use non-default <varname>DateStyle</varname> settings, <varname>DateStyle</varname> should be set to <literal>ISO</literal> before using <command>COPY TO</command>. It is also a good idea to avoid dumping data with <varname>IntervalStyle</varname> set to <literal>sql_standard</literal>, because negative interval values might be misinterpreted by a server that has a different setting for <varname>IntervalStyle</varname>."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:393(para) 
msgid "Input data is interpreted according to <literal>ENCODING</literal> option or the current client encoding, and output data is encoded in <literal>ENCODING</literal> or the current client encoding, even if the data does not pass through the client but is read from or written to a file directly by the server."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:401(para) 
msgid "<command>COPY</command> stops operation at the first error. This should not lead to problems in the event of a <command>COPY TO</command>, but the target table will already have received earlier rows in a <command>COPY FROM</command>. These rows will not be visible or accessible, but they still occupy disk space. This might amount to a considerable amount of wasted disk space if the failure happened well into a large copy operation. You might wish to invoke <command>VACUUM</command> to recover the wasted space."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:415(title) 
msgid "File Formats"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:418(title) 
msgid "Text Format"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:420(para) 
msgid "When the <literal>text</literal> format is used, the data read or written is a text file with one line per table row. Columns in a row are separated by the delimiter character. The column values themselves are strings generated by the output function, or acceptable to the input function, of each attribute's data type. The specified null string is used in place of columns that are null. <command>COPY FROM</command> will raise an error if any line of the input file contains more or fewer columns than are expected. If <literal>OIDS</literal> is specified, the OID is read or written as the first column, preceding the user data columns."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:434(para) 
msgid "End of data can be represented by a single line containing just backslash-period (<literal>\\.</literal>). An end-of-data marker is not necessary when reading from a file, since the end of file serves perfectly well; it is needed only when copying data to or from client applications using pre-3.0 client protocol."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:442(para) 
msgid "Backslash characters (<literal>\\</literal>) can be used in the <command>COPY</command> data to quote data characters that might otherwise be taken as row or column delimiters. In particular, the following characters <emphasis>must</emphasis> be preceded by a backslash if they appear as part of a column value: backslash itself, newline, carriage return, and the current delimiter character."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:451(para) 
msgid "The specified null string is sent by <command>COPY TO</command> without adding any backslashes; conversely, <command>COPY FROM</command> matches the input against the null string before removing backslashes. Therefore, a null string such as <literal>\\N</literal> cannot be confused with the actual data value <literal>\\N</literal> (which would be represented as <literal>\\\\N</literal>)."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:460(para) 
msgid "The following special backslash sequences are recognized by <command>COPY FROM</command>: <informaltable><tgroup cols=\"2\"><thead><row><entry>Sequence</entry><entry>Represents</entry></row></thead><tbody><row><entry><literal>\\b</literal></entry><entry>Backspace (ASCII 8)</entry></row><row><entry><literal>\\f</literal></entry><entry>Form feed (ASCII 12)</entry></row><row><entry><literal>\\n</literal></entry><entry>Newline (ASCII 10)</entry></row><row><entry><literal>\\r</literal></entry><entry>Carriage return (ASCII 13)</entry></row><row><entry><literal>\\t</literal></entry><entry>Tab (ASCII 9)</entry></row><row><entry><literal>\\v</literal></entry><entry>Vertical tab (ASCII 11)</entry></row><row><entry><literal>\\</literal><replaceable>digits</replaceable></entry><entry>Backslash followed by one to three octal digits specifies the character with that numeric code</entry></row><row><entry><literal>\\x</literal><replaceable>digits</replaceable></entry><entry>Backslash <literal>x</literal> followed by one or two hex digits specifies the character with that numeric code</entry></row></tbody></tgroup></informaltable> Presently, <command>COPY TO</command> will never emit an octal or hex-digits backslash sequence, but it does use the other sequences listed above for those control characters."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:517(para) 
msgid "Any other backslashed character that is not mentioned in the above table will be taken to represent itself. However, beware of adding backslashes unnecessarily, since that might accidentally produce a string matching the end-of-data marker (<literal>\\.</literal>) or the null string (<literal>\\N</literal> by default). These strings will be recognized before any other backslash processing is done."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:526(para) 
msgid "It is strongly recommended that applications generating <command>COPY</command> data convert data newlines and carriage returns to the <literal>\\n</literal> and <literal>\\r</literal> sequences respectively. At present it is possible to represent a data carriage return by a backslash and carriage return, and to represent a data newline by a backslash and newline. However, these representations might not be accepted in future releases. They are also highly vulnerable to corruption if the <command>COPY</command> file is transferred across different machines (for example, from Unix to Windows or vice versa)."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:538(para) 
msgid "<command>COPY TO</command> will terminate each row with a Unix-style newline (<quote><literal>\\n</literal></quote>). Servers running on Microsoft Windows instead output carriage return/newline (<quote><literal>\\r\\n</literal></quote>), but only for <command>COPY</command> to a server file; for consistency across platforms, <command>COPY TO STDOUT</command> always sends <quote><literal>\\n</literal></quote> regardless of server platform. <command>COPY FROM</command> can handle lines ending with newlines, carriage returns, or carriage return/newlines. To reduce the risk of error due to un-backslashed newlines or carriage returns that were meant as data, <command>COPY FROM</command> will complain if the line endings in the input are not all alike."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:554(title) 
msgid "CSV Format"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:556(para) 
msgid "This format option is used for importing and exporting the Comma Separated Value (<literal>CSV</literal>) file format used by many other programs, such as spreadsheets. Instead of the escaping rules used by <productname>PostgreSQL</productname>'s standard text format, it produces and recognizes the common CSV escaping mechanism."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:564(para) 
msgid "The values in each record are separated by the <literal>DELIMITER</literal> character. If the value contains the delimiter character, the <literal>QUOTE</literal> character, the <literal>NULL</literal> string, a carriage return, or line feed character, then the whole value is prefixed and suffixed by the <literal>QUOTE</literal> character, and any occurrence within the value of a <literal>QUOTE</literal> character or the <literal>ESCAPE</literal> character is preceded by the escape character. You can also use <literal>FORCE_QUOTE</literal> to force quotes when outputting non-<literal>NULL</literal> values in specific columns."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:576(para) 
msgid "The <literal>CSV</literal> format has no standard way to distinguish a <literal>NULL</literal> value from an empty string. <productname>PostgreSQL</productname>'s <command>COPY</command> handles this by quoting. A <literal>NULL</literal> is output as the <literal>NULL</literal> parameter string and is not quoted, while a non-<literal>NULL</literal> value matching the <literal>NULL</literal> parameter string is quoted. For example, with the default settings, a <literal>NULL</literal> is written as an unquoted empty string, while an empty string data value is written with double quotes (<literal>\"\"</literal>). Reading values follows similar rules. You can use <literal>FORCE_NOT_NULL</literal> to prevent <literal>NULL</literal> input comparisons for specific columns."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:590(para) 
msgid "Because backslash is not a special character in the <literal>CSV</literal> format, <literal>\\.</literal>, the end-of-data marker, could also appear as a data value. To avoid any misinterpretation, a <literal>\\.</literal> data value appearing as a lone entry on a line is automatically quoted on output, and on input, if quoted, is not interpreted as the end-of-data marker. If you are loading a file created by another application that has a single unquoted column and might have a value of <literal>\\.</literal>, you might need to quote that value in the input file."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:603(para) 
msgid "In <literal>CSV</literal> format, all characters are significant. A quoted value surrounded by white space, or any characters other than <literal>DELIMITER</literal>, will include those characters. This can cause errors if you import data from a system that pads <literal>CSV</literal> lines with white space out to some fixed width. If such a situation arises you might need to preprocess the <literal>CSV</literal> file to remove the trailing white space, before importing the data into <productname>PostgreSQL</productname>."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:616(para) 
msgid "CSV format will both recognize and produce CSV files with quoted values containing embedded carriage returns and line feeds. Thus the files are not strictly one line per table row like text-format files."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:625(para) 
msgid "Many programs produce strange and occasionally perverse CSV files, so the file format is more a convention than a standard. Thus you might encounter some files that cannot be imported using this mechanism, and <command>COPY</command> might produce files that other programs cannot process."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:637(title) 
msgid "Binary Format"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:639(para) 
msgid "The <literal>binary</literal> format option causes all data to be stored/read as binary format rather than as text. It is somewhat faster than the text and <literal>CSV</literal> formats, but a binary-format file is less portable across machine architectures and <productname>PostgreSQL</productname> versions. Also, the binary format is very data type specific; for example it will not work to output binary data from a <type>smallint</type> column and read it into an <type>integer</type> column, even though that would work fine in text format."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:651(para) 
msgid "The <literal>binary</literal> file format consists of a file header, zero or more tuples containing the row data, and a file trailer. Headers and data are in network byte order."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:658(para) 
msgid "<productname>PostgreSQL</productname> releases before 7.4 used a different binary file format."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:665(title) 
msgid "File Header"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:673(term) 
msgid "Signature"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:675(para) 
msgid "11-byte sequence <literal>PGCOPY\\n\\377\\r\\n\\0</literal> — note that the zero byte is a required part of the signature. (The signature is designed to allow easy identification of files that have been munged by a non-8-bit-clean transfer. This signature will be changed by end-of-line-translation filters, dropped zero bytes, dropped high bits, or parity changes.)"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:686(term) 
msgid "Flags field"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:700(term) 
msgid "Bit 16"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:702(para) 
msgid "if 1, OIDs are included in the data; if 0, not"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:688(para) 
msgid "32-bit integer bit mask to denote important aspects of the file format. Bits are numbered from 0 (<acronym>LSB</acronym>) to 31 (<acronym>MSB</acronym>). Note that this field is stored in network byte order (most significant byte first), as are all the integer fields used in the file format. Bits 16-31 are reserved to denote critical file format issues; a reader should abort if it finds an unexpected bit set in this range. Bits 0-15 are reserved to signal backwards-compatible format issues; a reader should simply ignore any unexpected bits set in this range. Currently only one flag bit is defined, and the rest must be zero: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:712(term) 
msgid "Header extension area length"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:714(para) 
msgid "32-bit integer, length in bytes of remainder of header, not including self. Currently, this is zero, and the first tuple follows immediately. Future changes to the format might allow additional data to be present in the header. A reader should silently skip over any header extension data it does not know what to do with."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:667(para) 
msgid "The file header consists of 15 bytes of fixed fields, followed by a variable-length header extension area. The fixed fields are: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:726(para) 
msgid "The header extension area is envisioned to contain a sequence of self-identifying chunks. The flags field is not intended to tell readers what is in the extension area. Specific design of header extension contents is left for a later release."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:733(para) 
msgid "This design allows for both backwards-compatible header additions (add header extension chunks, or set low-order flag bits) and non-backwards-compatible changes (set high-order flag bits to signal such changes, and add supporting data to the extension area if needed)."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:742(title) 
msgid "Tuples"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:743(para) 
msgid "Each tuple begins with a 16-bit integer count of the number of fields in the tuple. (Presently, all tuples in a table will have the same count, but that might not always be true.) Then, repeated for each field in the tuple, there is a 32-bit length word followed by that many bytes of field data. (The length word does not include itself, and can be zero.) As a special case, -1 indicates a NULL field value. No value bytes follow in the NULL case."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:752(para) 
msgid "There is no alignment padding or any other extra data between fields."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:756(para) 
msgid "Presently, all data values in a binary-format file are assumed to be in binary format (format code one). It is anticipated that a future extension might add a header field that allows per-column format codes to be specified."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:763(para) 
msgid "To determine the appropriate binary format for the actual tuple data you should consult the <productname>PostgreSQL</productname> source, in particular the <function>*send</function> and <function>*recv</function> functions for each column's data type (typically these functions are found in the <filename>src/backend/utils/adt/</filename> directory of the source distribution)."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:772(para) 
msgid "If OIDs are included in the file, the OID field immediately follows the field-count word. It is a normal field except that it's not included in the field-count. In particular it has a length word — this will allow handling of 4-byte vs. 8-byte OIDs without too much pain, and will allow OIDs to be shown as null if that ever proves desirable."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:782(title) 
msgid "File Trailer"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:784(para) 
msgid "The file trailer consists of a 16-bit integer word containing -1. This is easily distinguished from a tuple's field-count word."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:789(para) 
msgid "A reader should report an error if a field-count word is neither -1 nor the expected number of columns. This provides an extra check against somehow getting out of sync with the data."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:799(title) 
msgid "Examples"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:804(programlisting) 
#, no-wrap
msgid "\nCOPY country TO STDOUT (DELIMITER '|');\n"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:801(para) 
msgid "The following example copies a table to the client using the vertical bar (<literal>|</literal>) as the field delimiter: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:811(programlisting) 
#, no-wrap
msgid "\nCOPY country FROM '/usr1/proj/bray/sql/country_data';\n"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:809(para) 
msgid "To copy data from a file into the <literal>country</literal> table: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:818(programlisting) 
#, no-wrap
msgid "\nCOPY (SELECT * FROM country WHERE country_name LIKE 'A%') TO '/usr1/proj/bray/sql/a_list_countries.copy';\n"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:816(para) 
msgid "To copy into a file just the countries whose names start with 'A': <placeholder-1/>"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:826(programlisting) 
#, no-wrap
msgid "\nAF      AFGHANISTAN\nAL      ALBANIA\nDZ      ALGERIA\nZM      ZAMBIA\nZW      ZIMBABWE\n"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:823(para) 
msgid "Here is a sample of data suitable for copying into a table from <literal>STDIN</literal>: <placeholder-1/> Note that the white space on each line is actually a tab character."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:843(programlisting) 
#, no-wrap
msgid "\n0000000   P   G   C   O   P   Y  \\n 377  \\r  \\n  \\0  \\0  \\0  \\0  \\0  \\0\n0000020  \\0  \\0  \\0  \\0 003  \\0  \\0  \\0 002   A   F  \\0  \\0  \\0 013   A\n0000040   F   G   H   A   N   I   S   T   A   N 377 377 377 377  \\0 003\n0000060  \\0  \\0  \\0 002   A   L  \\0  \\0  \\0 007   A   L   B   A   N   I\n0000100   A 377 377 377 377  \\0 003  \\0  \\0  \\0 002   D   Z  \\0  \\0  \\0\n0000120 007   A   L   G   E   R   I   A 377 377 377 377  \\0 003  \\0  \\0\n0000140  \\0 002   Z   M  \\0  \\0  \\0 006   Z   A   M   B   I   A 377 377\n0000160 377 377  \\0 003  \\0  \\0  \\0 002   Z   W  \\0  \\0  \\0  \\b   Z   I\n0000200   M   B   A   B   W   E 377 377 377 377 377 377\n"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:836(para) 
msgid "The following is the same data, output in binary format. The data is shown after filtering through the Unix utility <command>od -c</command>. The table has three columns; the first has type <type>char(2)</type>, the second has type <type>text</type>, and the third has type <type>integer</type>. All the rows have a null value in the third column. <placeholder-1/>"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:857(title) 
msgid "Compatibility"
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:859(para) 
msgid "There is no <command>COPY</command> statement in the SQL standard."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:863(para) 
msgid "The following syntax was used before <productname>PostgreSQL</productname> version 9.0 and is still supported: <synopsis>\nCOPY <replaceable class=\"parameter\">table_name</replaceable> [ ( <replaceable class=\"parameter\">column</replaceable> [, ...] ) ]\n    FROM { '<replaceable class=\"parameter\">filename</replaceable>' | STDIN }\n    [ [ WITH ]\n          [ BINARY ]\n          [ OIDS ]\n          [ DELIMITER [ AS ] '<replaceable class=\"parameter\">delimiter</replaceable>' ]\n          [ NULL [ AS ] '<replaceable class=\"parameter\">null string</replaceable>' ]\n          [ CSV [ HEADER ]\n                [ QUOTE [ AS ] '<replaceable class=\"parameter\">quote</replaceable>' ]\n                [ ESCAPE [ AS ] '<replaceable class=\"parameter\">escape</replaceable>' ]\n                [ FORCE NOT NULL <replaceable class=\"parameter\">column</replaceable> [, ...] ] ] ]\n\nCOPY { <replaceable class=\"parameter\">table_name</replaceable> [ ( <replaceable class=\"parameter\">column</replaceable> [, ...] ) ] | ( <replaceable class=\"parameter\">query</replaceable> ) }\n    TO { '<replaceable class=\"parameter\">filename</replaceable>' | STDOUT }\n    [ [ WITH ]\n          [ BINARY ]\n          [ OIDS ]\n          [ DELIMITER [ AS ] '<replaceable class=\"parameter\">delimiter</replaceable>' ]\n          [ NULL [ AS ] '<replaceable class=\"parameter\">null string</replaceable>' ]\n          [ CSV [ HEADER ]\n                [ QUOTE [ AS ] '<replaceable class=\"parameter\">quote</replaceable>' ]\n                [ ESCAPE [ AS ] '<replaceable class=\"parameter\">escape</replaceable>' ]\n                [ FORCE QUOTE { <replaceable class=\"parameter\">column</replaceable> [, ...] | * } ] ] ]\n</synopsis> Note that in this syntax, <literal>BINARY</literal> and <literal>CSV</literal> are treated as independent keywords, not as arguments of a <literal>FORMAT</literal> option."
msgstr ""

#: /tmp/cicero-tkrh/ref/copy.xml:898(para) 
msgid "The following syntax was used before <productname>PostgreSQL</productname> version 7.3 and is still supported: <synopsis>\nCOPY [ BINARY ] <replaceable class=\"parameter\">table_name</replaceable> [ WITH OIDS ]\n    FROM { '<replaceable class=\"parameter\">filename</replaceable>' | STDIN }\n    [ [USING] DELIMITERS '<replaceable class=\"parameter\">delimiter</replaceable>' ]\n    [ WITH NULL AS '<replaceable class=\"parameter\">null string</replaceable>' ]\n\nCOPY [ BINARY ] <replaceable class=\"parameter\">table_name</replaceable> [ WITH OIDS ]\n    TO { '<replaceable class=\"parameter\">filename</replaceable>' | STDOUT }\n    [ [USING] DELIMITERS '<replaceable class=\"parameter\">delimiter</replaceable>' ]\n    [ WITH NULL AS '<replaceable class=\"parameter\">null string</replaceable>' ]\n</synopsis>"
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2.
#: /tmp/cicero-tkrh/ref/copy.xml:0(None) 
msgid "translator-credits"
msgstr ""

