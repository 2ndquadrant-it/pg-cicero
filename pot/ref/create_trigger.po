msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-05-26 12:13+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:9(refentrytitle) /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:15(refname) /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:20(primary)
msgid "CREATE TRIGGER"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:10(manvolnum)
msgid "7"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:11(refmiscinfo)
msgid "SQL - Language Statements"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:16(refpurpose)
msgid "define a new trigger"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:25(replaceable) /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:108(replaceable)
msgid "name"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:25(replaceable) /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:129(replaceable)
msgid "event"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:26(replaceable) /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:151(replaceable)
msgid "table"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:27(replaceable) /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:175(replaceable)
msgid "condition"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:28(replaceable) /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:200(replaceable)
msgid "function_name"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:28(replaceable) /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:211(replaceable)
msgid "arguments"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:24(synopsis)
#, no-wrap
msgid "\nCREATE TRIGGER <placeholder-1/> { BEFORE | AFTER } { <placeholder-2/> [ OR ... ] }\n    ON <placeholder-3/> [ FOR [ EACH ] { ROW | STATEMENT } ]\n    [ WHEN ( <placeholder-4/> ) ]\n    EXECUTE PROCEDURE <placeholder-5/> ( <placeholder-6/> )\n"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:33(title)
msgid "Description"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:35(para)
msgid "<command>CREATE TRIGGER</command> creates a new trigger. The trigger will be associated with the specified table and will execute the specified function <replaceable class=\"parameter\">function_name</replaceable> when certain events occur."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:42(para)
msgid "The trigger can be specified to fire either before the operation is attempted on a row (before constraints are checked and the <command>INSERT</command>, <command>UPDATE</command>, or <command>DELETE</command> is attempted) or after the operation has completed (after constraints are checked and the <command>INSERT</command>, <command>UPDATE</command>, or <command>DELETE</command> has completed). If the trigger fires before the event, the trigger can skip the operation for the current row, or change the row being inserted (for <command>INSERT</command> and <command>UPDATE</command> operations only). If the trigger fires after the event, all changes, including the effects of other triggers, are <quote>visible</quote> to the trigger."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:58(para)
msgid "A trigger that is marked <literal>FOR EACH ROW</literal> is called once for every row that the operation modifies. For example, a <command>DELETE</command> that affects 10 rows will cause any <literal>ON DELETE</literal> triggers on the target relation to be called 10 separate times, once for each deleted row. In contrast, a trigger that is marked <literal>FOR EACH STATEMENT</literal> only executes once for any given operation, regardless of how many rows it modifies (in particular, an operation that modifies zero rows will still result in the execution of any applicable <literal>FOR EACH STATEMENT</literal> triggers)."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:71(para)
msgid "In addition, triggers may be defined to fire for a <command>TRUNCATE</command>, though only <literal>FOR EACH STATEMENT</literal>."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:77(para)
msgid "Also, a trigger definition can specify a Boolean <literal>WHEN</literal> condition, which will be tested to see whether the trigger should be fired. In row-level triggers the <literal>WHEN</literal> condition can examine the old and/or new values of columns of the row. Statement-level triggers can also have <literal>WHEN</literal> conditions, although the feature is not so useful for them since the condition cannot refer to any values in the table."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:87(para)
msgid "If multiple triggers of the same kind are defined for the same event, they will be fired in alphabetical order by name."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:92(para)
msgid "<command>SELECT</command> does not modify any rows so you cannot create <command>SELECT</command> triggers. Rules and views are more appropriate in such cases."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:98(para)
msgid "Refer to <xref linkend=\"triggers\"/> for more information about triggers."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:104(title)
msgid "Parameters"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:110(para)
msgid "The name to give the new trigger. This must be distinct from the name of any other trigger for the same table."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:118(literal)
msgid "BEFORE"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:119(literal)
msgid "AFTER"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:121(para)
msgid "Determines whether the function is called before or after the event."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:131(para)
msgid "One of <command>INSERT</command>, <command>UPDATE</command>, <command>DELETE</command>, or <command>TRUNCATE</command>; this specifies the event that will fire the trigger. Multiple events can be specified using <literal>OR</literal>."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:138(para)
msgid "For <command>UPDATE</command> triggers, it is possible to specify a list of columns using this syntax: <synopsis>\nUPDATE OF <replaceable>column_name1</replaceable> [, <replaceable>column_name2</replaceable> ... ]\n</synopsis> The trigger will only fire if at least one of the listed columns is mentioned as a target of the update."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:153(para)
msgid "The name (optionally schema-qualified) of the table the trigger is for."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:161(literal)
msgid "FOR EACH ROW"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:162(literal)
msgid "FOR EACH STATEMENT"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:165(para)
msgid "This specifies whether the trigger procedure should be fired once for every row affected by the trigger event, or just once per SQL statement. If neither is specified, <literal>FOR EACH STATEMENT</literal> is the default."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:177(para)
msgid "A Boolean expression that determines whether the trigger function will actually be executed. If <literal>WHEN</literal> is specified, the function will only be called if the <replaceable class=\"parameter\">condition</replaceable> returns <literal>true</literal>. In <literal>FOR EACH ROW</literal> triggers, the <literal>WHEN</literal> condition can refer to columns of the old and/or new row values by writing <literal>OLD.<replaceable class=\"parameter\">column_name</replaceable></literal> or <literal>NEW.<replaceable class=\"parameter\">column_name</replaceable></literal> respectively. Of course, <literal>INSERT</literal> triggers cannot refer to <literal>OLD</literal> and <literal>DELETE</literal> triggers cannot refer to <literal>NEW</literal>."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:192(para)
msgid "Currently, <literal>WHEN</literal> expressions cannot contain subqueries."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:202(para)
msgid "A user-supplied function that is declared as taking no arguments and returning type <literal>trigger</literal>, which is executed when the trigger fires."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:213(para)
msgid "An optional comma-separated list of arguments to be provided to the function when the trigger is executed. The arguments are literal string constants. Simple names and numeric constants can be written here, too, but they will all be converted to strings. Please check the description of the implementation language of the trigger function to find out how these arguments can be accessed within the function; it might be different from normal function arguments."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:229(title)
msgid "Notes"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:231(para)
msgid "To create a trigger on a table, the user must have the <literal>TRIGGER</literal> privilege on the table."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:236(para)
msgid "Use <xref linkend=\"sql-droptrigger\"/> to remove a trigger."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:240(para)
msgid "A column-specific trigger (<literal>FOR UPDATE OF <replaceable>column_name</replaceable></literal>) will fire when any of its columns are listed as targets in the <command>UPDATE</command> command's <literal>SET</literal> list. It is possible for a column's value to change even when the trigger is not fired, because changes made to the row's contents by <literal>BEFORE UPDATE</literal> triggers are not considered. Conversely, a command such as <literal>UPDATE ... SET x = x ...</literal> will fire a trigger on column <literal>x</literal>, even though the column's value did not change."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:252(para)
msgid "In a <literal>BEFORE</literal> trigger, the <literal>WHEN</literal> condition is evaluated just before the function is or would be executed, so using <literal>WHEN</literal> is not materially different from testing the same condition at the beginning of the trigger function. Note in particular that the <literal>NEW</literal> row seen by the condition is the current value, as possibly modified by earlier triggers. Also, a <literal>BEFORE</literal> trigger's <literal>WHEN</literal> condition is not allowed to examine the system columns of the <literal>NEW</literal> row (such as <literal>oid</literal>), because those won't have been set yet."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:264(para)
msgid "In an <literal>AFTER</literal> trigger, the <literal>WHEN</literal> condition is evaluated just after the row update occurs, and it determines whether an event is queued to fire the trigger at the end of statement. So when an <literal>AFTER</literal> trigger's <literal>WHEN</literal> condition does not return true, it is not necessary to queue an event nor to re-fetch the row at end of statement. This can result in significant speedups in statements that modify many rows, if the trigger only needs to be fired for a few of the rows."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:275(para)
msgid "In <productname>PostgreSQL</productname> versions before 7.3, it was necessary to declare trigger functions as returning the placeholder type <type>opaque</type>, rather than <type>trigger</type>. To support loading of old dump files, <command>CREATE TRIGGER</command> will accept a function declared as returning <type>opaque</type>, but it will issue a notice and change the function's declared return type to <type>trigger</type>."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:286(title)
msgid "Examples"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:292(programlisting)
#, no-wrap
msgid "\nCREATE TRIGGER check_update\n    BEFORE UPDATE ON accounts\n    FOR EACH ROW\n    EXECUTE PROCEDURE check_account_update();\n"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:302(programlisting)
#, no-wrap
msgid "\nCREATE TRIGGER check_update\n    BEFORE UPDATE OF balance ON accounts\n    FOR EACH ROW\n    EXECUTE PROCEDURE check_account_update();\n"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:312(programlisting)
#, no-wrap
msgid "\nCREATE TRIGGER check_update\n    BEFORE UPDATE ON accounts\n    FOR EACH ROW\n    WHEN (OLD.balance IS DISTINCT FROM NEW.balance)\n    EXECUTE PROCEDURE check_account_update();\n"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:323(programlisting)
#, no-wrap
msgid "\nCREATE TRIGGER log_update\n    AFTER UPDATE ON accounts\n    FOR EACH ROW\n    WHEN (OLD.* IS DISTINCT FROM NEW.*)\n    EXECUTE PROCEDURE log_account_update();\n"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:288(para)
msgid "Execute the function <function>check_account_update</function> whenever a row of the table <literal>accounts</literal> is about to be updated: <placeholder-1/> The same, but only execute the function if column <literal>balance</literal> is specified as a target in the <command>UPDATE</command> command: <placeholder-2/> This form only executes the function if column <literal>balance</literal> has in fact changed value: <placeholder-3/> Call a function to log updates of <literal>accounts</literal>, but only if something changed: <placeholder-4/>"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:332(para)
msgid "<xref linkend=\"trigger-example\"/> contains a complete example of a trigger function written in C."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:339(title)
msgid "Compatibility"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:348(para)
msgid "SQL allows you to define aliases for the <quote>old</quote> and <quote>new</quote> rows or tables for use in the definition of the triggered action (e.g., <literal>CREATE TRIGGER ... ON tablename REFERENCING OLD ROW AS somename NEW ROW AS othername ...</literal>). Since <productname>PostgreSQL</productname> allows trigger procedures to be written in any number of user-defined languages, access to the data is handled in a language-specific way."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:361(para)
msgid "<productname>PostgreSQL</productname> only allows the execution of a user-defined function for the triggered action. The standard allows the execution of a number of other SQL commands, such as <command>CREATE TABLE</command>, as the triggered action. This limitation is not hard to work around by creating a user-defined function that executes the desired commands."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:341(para)
msgid "The <command>CREATE TRIGGER</command> statement in <productname>PostgreSQL</productname> implements a subset of the <acronym>SQL</acronym> standard. The following functionality is currently missing: <placeholder-1/>"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:374(para)
msgid "SQL specifies that multiple triggers should be fired in time-of-creation order. <productname>PostgreSQL</productname> uses name order, which was judged to be more convenient."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:380(para)
msgid "SQL specifies that <literal>BEFORE DELETE</literal> triggers on cascaded deletes fire <emphasis>after</emphasis> the cascaded <literal>DELETE</literal> completes. The <productname>PostgreSQL</productname> behavior is for <literal>BEFORE DELETE</literal> to always fire before the delete action, even a cascading one. This is considered more consistent. There is also unpredictable behavior when <literal>BEFORE</literal> triggers modify rows or prevent updates during an update that is caused by a referential action. This can lead to constraint violations or stored data that does not honor the referential constraint."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:392(para)
msgid "The ability to specify multiple actions for a single trigger using <literal>OR</literal> is a <productname>PostgreSQL</productname> extension of the SQL standard."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:398(para)
msgid "The ability to fire triggers for <command>TRUNCATE</command> is a <productname>PostgreSQL</productname> extension of the SQL standard."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:406(title)
msgid "See Also"
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/ref/create_trigger.xml:0(None)
msgid "translator-credits"
msgstr ""

