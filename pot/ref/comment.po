msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-09-04 06:57+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /tmp/cicero-SLJB/ref/comment.xml:9(refentrytitle) /tmp/cicero-SLJB/ref/comment.xml:15(refname) /tmp/cicero-SLJB/ref/comment.xml:20(primary) 
msgid "COMMENT"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:10(manvolnum) 
msgid "7"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:11(refmiscinfo) 
msgid "SQL - Language Statements"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:16(refpurpose) 
msgid "define or change the comment of an object"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:27(replaceable) /tmp/cicero-SLJB/ref/comment.xml:103(replaceable) 
msgid "agg_name"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:27(replaceable) /tmp/cicero-SLJB/ref/comment.xml:123(replaceable) 
msgid "agg_type"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:28(replaceable) /tmp/cicero-SLJB/ref/comment.xml:134(replaceable) 
msgid "source_type"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:28(replaceable) /tmp/cicero-SLJB/ref/comment.xml:143(replaceable) 
msgid "target_type"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:29(replaceable) /tmp/cicero-SLJB/ref/comment.xml:32(replaceable) /tmp/cicero-SLJB/ref/comment.xml:33(replaceable) /tmp/cicero-SLJB/ref/comment.xml:34(replaceable) /tmp/cicero-SLJB/ref/comment.xml:35(replaceable) /tmp/cicero-SLJB/ref/comment.xml:36(replaceable) /tmp/cicero-SLJB/ref/comment.xml:37(replaceable) /tmp/cicero-SLJB/ref/comment.xml:39(replaceable) /tmp/cicero-SLJB/ref/comment.xml:42(replaceable) /tmp/cicero-SLJB/ref/comment.xml:43(replaceable) /tmp/cicero-SLJB/ref/comment.xml:44(replaceable) /tmp/cicero-SLJB/ref/comment.xml:45(replaceable) /tmp/cicero-SLJB/ref/comment.xml:47(replaceable) /tmp/cicero-SLJB/ref/comment.xml:48(replaceable) /tmp/cicero-SLJB/ref/comment.xml:49(replaceable) /tmp/cicero-SLJB/ref/comment.xml:50(replaceable) /tmp/cicero-SLJB/ref/comment.xml:51(replaceable) /tmp/cicero-SLJB/ref/comment.xml:52(replaceable) /tmp/cicero-SLJB/ref/comment.xml:53(replaceable) /tmp/cicero-SLJB/ref/comment.xml:54(replaceable) /tmp/cicero-SLJB/ref/comment.xml:55(replaceable) /tmp/cicero-SLJB/ref/comment.xml:57(replaceable) /tmp/cicero-SLJB/ref/comment.xml:58(replaceable) /tmp/cicero-SLJB/ref/comment.xml:101(replaceable) 
msgid "object_name"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:30(replaceable) 
msgid "relation_name"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:30(replaceable) 
msgid "column_name"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:31(replaceable) /tmp/cicero-SLJB/ref/comment.xml:104(replaceable) 
msgid "constraint_name"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:31(replaceable) /tmp/cicero-SLJB/ref/comment.xml:46(replaceable) /tmp/cicero-SLJB/ref/comment.xml:56(replaceable) 
msgid "table_name"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:38(replaceable) /tmp/cicero-SLJB/ref/comment.xml:105(replaceable) 
msgid "function_name"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:38(replaceable) /tmp/cicero-SLJB/ref/comment.xml:152(replaceable) 
msgid "argmode"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:38(replaceable) /tmp/cicero-SLJB/ref/comment.xml:168(replaceable) 
msgid "argname"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:38(replaceable) /tmp/cicero-SLJB/ref/comment.xml:180(replaceable) 
msgid "argtype"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:40(replaceable) /tmp/cicero-SLJB/ref/comment.xml:190(replaceable) 
msgid "large_object_oid"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:41(replaceable) /tmp/cicero-SLJB/ref/comment.xml:106(replaceable) 
msgid "operator_name"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:41(replaceable) /tmp/cicero-SLJB/ref/comment.xml:199(replaceable) 
msgid "left_type"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:41(replaceable) /tmp/cicero-SLJB/ref/comment.xml:200(replaceable) 
msgid "right_type"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:42(replaceable) /tmp/cicero-SLJB/ref/comment.xml:43(replaceable) 
msgid "index_method"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:46(replaceable) /tmp/cicero-SLJB/ref/comment.xml:107(replaceable) 
msgid "rule_name"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:56(replaceable) /tmp/cicero-SLJB/ref/comment.xml:108(replaceable) 
msgid "trigger_name"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:59(replaceable) /tmp/cicero-SLJB/ref/comment.xml:220(replaceable) 
msgid "text"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:24(synopsis) 
#, no-wrap
msgid "\nCOMMENT ON\n{\n  AGGREGATE <placeholder-1/> (<placeholder-2/> [, ...] ) |\n  CAST (<placeholder-3/> AS <placeholder-4/>) |\n  COLLATION <placeholder-5/> |\n  COLUMN <placeholder-6/>.<placeholder-7/> |\n  CONSTRAINT <placeholder-8/> ON <placeholder-9/> |\n  CONVERSION <placeholder-10/> |\n  DATABASE <placeholder-11/> |\n  DOMAIN <placeholder-12/> |\n  EXTENSION <placeholder-13/> |\n  FOREIGN DATA WRAPPER <placeholder-14/> |\n  FOREIGN TABLE <placeholder-15/> |\n  FUNCTION <placeholder-16/> ( [ [ <placeholder-17/> ] [ <placeholder-18/> ] <placeholder-19/> [, ...] ] ) |\n  INDEX <placeholder-20/> |\n  LARGE OBJECT <placeholder-21/> |\n  OPERATOR <placeholder-22/> (<placeholder-23/>, <placeholder-24/>) |\n  OPERATOR CLASS <placeholder-25/> USING <placeholder-26/> |\n  OPERATOR FAMILY <placeholder-27/> USING <placeholder-28/> |\n  [ PROCEDURAL ] LANGUAGE <placeholder-29/> |\n  ROLE <placeholder-30/> |\n  RULE <placeholder-31/> ON <placeholder-32/> |\n  SCHEMA <placeholder-33/> |\n  SEQUENCE <placeholder-34/> |\n  SERVER <placeholder-35/> |\n  TABLE <placeholder-36/> |\n  TABLESPACE <placeholder-37/> |\n  TEXT SEARCH CONFIGURATION <placeholder-38/> |\n  TEXT SEARCH DICTIONARY <placeholder-39/> |\n  TEXT SEARCH PARSER <placeholder-40/> |\n  TEXT SEARCH TEMPLATE <placeholder-41/> |\n  TRIGGER <placeholder-42/> ON <placeholder-43/> |\n  TYPE <placeholder-44/> |\n  VIEW <placeholder-45/>\n} IS '<placeholder-46/>'\n"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:64(title) 
msgid "Description"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:66(para) 
msgid "<command>COMMENT</command> stores a comment about a database object."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:70(para) 
msgid "Only one comment string is stored for each object, so to modify a comment, issue a new <command>COMMENT</command> command for the same object. To remove a comment, write <literal>NULL</literal> in place of the text string. Comments are automatically dropped when their object is dropped."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:77(para) 
msgid "For most kinds of object, only the object's owner can set the comment. Roles don't have owners, so the rule for <literal>COMMENT ON ROLE</literal> is that you must be superuser to comment on a superuser role, or have the <literal>CREATEROLE</literal> privilege to comment on non-superuser roles. Of course, a superuser can comment on anything."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:85(para) 
msgid "Comments can be viewed using <application>psql</application>'s <command>\\d</command> family of commands. Other user interfaces to retrieve comments can be built atop the same built-in functions that <application>psql</application> uses, namely <function>obj_description</function>, <function>col_description</function>, and <function>shobj_description</function> (see <xref linkend=\"functions-info-comment-table\"/>)."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:97(title) 
msgid "Parameters"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:102(term) 
msgid "<replaceable class=\"parameter\">relation_name</replaceable>.<replaceable>column_name</replaceable>"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:110(para) 
msgid "The name of the object to be commented. Names of tables, aggregates, collations, conversions, domains, foreign tables, functions, indexes, operators, operator classes, operator families, sequences, text search objects, types, and views can be schema-qualified. When commenting on a column, <replaceable class=\"parameter\">relation_name</replaceable> must refer to a table, view, composite type, or foreign table."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:125(para) 
msgid "An input data type on which the aggregate function operates. To reference a zero-argument aggregate function, write <literal>*</literal> in place of the list of input data types."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:136(para) 
msgid "The name of the source data type of the cast."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:145(para) 
msgid "The name of the target data type of the cast."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:154(para) 
msgid "The mode of a function argument: <literal>IN</literal>, <literal>OUT</literal>, <literal>INOUT</literal>, or <literal>VARIADIC</literal>. If omitted, the default is <literal>IN</literal>. Note that <command>COMMENT ON FUNCTION</command> does not actually pay any attention to <literal>OUT</literal> arguments, since only the input arguments are needed to determine the function's identity. So it is sufficient to list the <literal>IN</literal>, <literal>INOUT</literal>, and <literal>VARIADIC</literal> arguments."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:170(para) 
msgid "The name of a function argument. Note that <command>COMMENT ON FUNCTION</command> does not actually pay any attention to argument names, since only the argument data types are needed to determine the function's identity."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:182(para) 
msgid "The data type(s) of the function's arguments (optionally schema-qualified), if any."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:192(para) 
msgid "The OID of the large object."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:202(para) 
msgid "The data type(s) of the operator's arguments (optionally schema-qualified). Write <literal>NONE</literal> for the missing argument of a prefix or postfix operator."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:211(literal) 
msgid "PROCEDURAL"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:213(para) 
msgid "This is a noise word."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:222(para) 
msgid "The new comment, written as a string literal; or <literal>NULL</literal> to drop the comment."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:233(title) 
msgid "Notes"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:235(para) 
msgid "There is presently no security mechanism for viewing comments: any user connected to a database can see all the comments for objects in that database. For shared objects such as databases, roles, and tablespaces, comments are stored globally so any user connected to any database in the cluster can see all the comments for shared objects. Therefore, don't put security-critical information in comments."
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:247(title) 
msgid "Examples"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:252(programlisting) 
#, no-wrap
msgid "\nCOMMENT ON TABLE mytable IS 'This is my table.';\n"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:258(programlisting) 
#, no-wrap
msgid "\nCOMMENT ON TABLE mytable IS NULL;\n"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:249(para) 
msgid "Attach a comment to the table <literal>mytable</literal>: <placeholder-1/> Remove it again: <placeholder-2/>"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:266(programlisting) 
#, no-wrap
msgid "\nCOMMENT ON AGGREGATE my_aggregate (double precision) IS 'Computes sample variance';\nCOMMENT ON CAST (text AS int4) IS 'Allow casts from text to int4';\nCOMMENT ON COLLATION \"fr_CA\" IS 'Canadian French';\nCOMMENT ON COLUMN my_table.my_column IS 'Employee ID number';\nCOMMENT ON CONVERSION my_conv IS 'Conversion to UTF8';\nCOMMENT ON CONSTRAINT bar_col_cons ON bar IS 'Constrains column col';\nCOMMENT ON DATABASE my_database IS 'Development Database';\nCOMMENT ON DOMAIN my_domain IS 'Email Address Domain';\nCOMMENT ON EXTENSION hstore IS 'implements the hstore data type';\nCOMMENT ON FOREIGN DATA WRAPPER mywrapper IS 'my foreign data wrapper';\nCOMMENT ON FOREIGN TABLE my_foreign_table IS 'Employee Information in other database';\nCOMMENT ON FUNCTION my_function (timestamp) IS 'Returns Roman Numeral';\nCOMMENT ON INDEX my_index IS 'Enforces uniqueness on employee ID';\nCOMMENT ON LANGUAGE plpython IS 'Python support for stored procedures';\nCOMMENT ON LARGE OBJECT 346344 IS 'Planning document';\nCOMMENT ON OPERATOR ^ (text, text) IS 'Performs intersection of two texts';\nCOMMENT ON OPERATOR - (NONE, integer) IS 'Unary minus';\nCOMMENT ON OPERATOR CLASS int4ops USING btree IS '4 byte integer operators for btrees';\nCOMMENT ON OPERATOR FAMILY integer_ops USING btree IS 'all integer operators for btrees';\nCOMMENT ON ROLE my_role IS 'Administration group for finance tables';\nCOMMENT ON RULE my_rule ON my_table IS 'Logs updates of employee records';\nCOMMENT ON SCHEMA my_schema IS 'Departmental data';\nCOMMENT ON SEQUENCE my_sequence IS 'Used to generate primary keys';\nCOMMENT ON SERVER myserver IS 'my foreign server';\nCOMMENT ON TABLE my_schema.my_table IS 'Employee Information';\nCOMMENT ON TABLESPACE my_tablespace IS 'Tablespace for indexes';\nCOMMENT ON TEXT SEARCH CONFIGURATION my_config IS 'Special word filtering';\nCOMMENT ON TEXT SEARCH DICTIONARY swedish IS 'Snowball stemmer for swedish language';\nCOMMENT ON TEXT SEARCH PARSER my_parser IS 'Splits text into words';\nCOMMENT ON TEXT SEARCH TEMPLATE snowball IS 'Snowball stemmer';\nCOMMENT ON TRIGGER my_trigger ON my_table IS 'Used for RI';\nCOMMENT ON TYPE complex IS 'Complex number data type';\nCOMMENT ON VIEW my_view IS 'View of departmental costs';\n"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:263(para) 
msgid "Some more examples: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:304(title) 
msgid "Compatibility"
msgstr ""

#: /tmp/cicero-SLJB/ref/comment.xml:306(para) 
msgid "There is no <command>COMMENT</command> command in the SQL standard."
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2.
#: /tmp/cicero-SLJB/ref/comment.xml:0(None) 
msgid "translator-credits"
msgstr ""

