msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-05-26 12:15+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:5(title) /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:8(primary)
msgid "citext"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:11(para)
msgid "The <filename>citext</filename> module provides a case-insensitive character string type, <type>citext</type>. Essentially, it internally calls <function>lower</function> when comparing values. Otherwise, it behaves almost exactly like <type>text</type>."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:19(title)
msgid "Rationale"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:26(programlisting)
#, no-wrap
msgid "\nSELECT * FROM tab WHERE lower(col) = LOWER(?);\n"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:21(para)
msgid "The standard approach to doing case-insensitive matches in <productname>PostgreSQL</productname> has been to use the <function>lower</function> function when comparing values, for example <placeholder-1/>"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:31(para)
msgid "This works reasonably well, but has a number of drawbacks:"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:37(para)
msgid "It makes your SQL statements verbose, and you always have to remember to use <function>lower</function> on both the column and the query value."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:43(para)
msgid "It won't use an index, unless you create a functional index using <function>lower</function>."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:49(para)
msgid "If you declare a column as <literal>UNIQUE</literal> or <literal>PRIMARY KEY</literal>, the implicitly generated index is case-sensitive. So it's useless for case-insensitive searches, and it won't enforce uniqueness case-insensitively."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:58(para)
msgid "The <type>citext</type> data type allows you to eliminate calls to <function>lower</function> in SQL queries, and allows a primary key to be case-insensitive. <type>citext</type> is locale-aware, just like <type>text</type>, which means that the comparison of upper case and lower case characters is dependent on the rules of the <literal>LC_CTYPE</literal> locale setting. Again, this behavior is identical to the use of <function>lower</function> in queries. But because it's done transparently by the data type, you don't have to remember to do anything special in your queries."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:73(title)
msgid "How to Use It"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:78(programlisting)
#, no-wrap
msgid "\nCREATE TABLE users (\n    nick CITEXT PRIMARY KEY,\n    pass TEXT   NOT NULL\n);\n\nINSERT INTO users VALUES ( 'larry',  md5(random()::text) );\nINSERT INTO users VALUES ( 'Tom',    md5(random()::text) );\nINSERT INTO users VALUES ( 'Damian', md5(random()::text) );\nINSERT INTO users VALUES ( 'NEAL',   md5(random()::text) );\nINSERT INTO users VALUES ( 'Bj√∏rn',  md5(random()::text) );\n\nSELECT * FROM users WHERE nick = 'Larry';\n"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:75(para)
msgid "Here's a simple example of usage: <placeholder-1/> The <command>SELECT</command> statement will return one tuple, even though the <structfield>nick</structfield> column was set to <literal>larry</literal> and the query was for <literal>Larry</literal>."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:100(title)
msgid "String Comparison Behavior"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:101(para)
msgid "In order to emulate a case-insensitive collation as closely as possible, there are <type>citext</type>-specific versions of a number of the comparison operators and functions. So, for example, the regular expression operators <literal>~</literal> and <literal>~*</literal> exhibit the same behavior when applied to <type>citext</type>: they both compare case-insensitively. The same is true for <literal>!~</literal> and <literal>!~*</literal>, as well as for the <literal>LIKE</literal> operators <literal>~~</literal> and <literal>~~*</literal>, and <literal>!~~</literal> and <literal>!~~*</literal>. If you'd like to match case-sensitively, you can always cast to <type>text</type> before comparing."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:114(para)
msgid "Similarly, all of the following functions perform matching case-insensitively if their arguments are <type>citext</type>:"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:122(function)
msgid "regexp_replace()"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:127(function)
msgid "regexp_split_to_array()"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:132(function)
msgid "regexp_split_to_table()"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:137(function)
msgid "replace()"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:142(function)
msgid "split_part()"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:147(function)
msgid "strpos()"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:152(function)
msgid "translate()"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:157(para)
msgid "For the regexp functions, if you want to match case-sensitively, you can specify the <quote>c</quote> flag to force a case-sensitive match. Otherwise, you must cast to <type>text</type> before using one of these functions if you want case-sensitive behavior."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:167(title)
msgid "Limitations"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:171(para)
msgid "<type>citext</type>'s behavior depends on the <literal>LC_CTYPE</literal> setting of your database. How it compares values is therefore determined when <application>initdb</application> is run to create the cluster. It is not truly case-insensitive in the terms defined by the Unicode standard. Effectively, what this means is that, as long as you're happy with your collation, you should be happy with <type>citext</type>'s comparisons. But if you have data in different languages stored in your database, users of one language may find their query results are not as expected if the collation is for another language."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:186(para)
msgid "<type>citext</type> is not as efficient as <type>text</type> because the operator functions and the B-tree comparison functions must make copies of the data and convert it to lower case for comparisons. It is, however, slightly more efficient than using <function>lower</function> to get case-insensitive matching."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:196(para)
msgid "<type>citext</type> doesn't help much if you need data to compare case-sensitively in some contexts and case-insensitively in other contexts. The standard answer is to use the <type>text</type> type and manually use the <function>lower</function> function when you need to compare case-insensitively; this works all right if case-insensitive comparison is needed only infrequently. If you need case-insensitive most of the time and case-sensitive infrequently, consider storing the data as <type>citext</type> and explicitly casting the column to <type>text</type> when you want case-sensitive comparison. In either situation, you will need two indexes if you want both types of searches to be fast."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:211(para)
msgid "The schema containing the <type>citext</type> operators must be in the current <varname>search_path</varname> (typically <literal>public</literal>); if it is not, a normal case-sensitive <type>text</type> comparison is performed."
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:222(title)
msgid "Author"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:224(para)
msgid "David E. Wheeler <email>david@kineticode.com</email>"
msgstr ""

#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:228(para)
msgid "Inspired by the original <type>citext</type> module by Donald Fraser."
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: /home/carloratm/progetti/postgresql-source/doc-9.0.4/citext.xml:0(None)
msgid "translator-credits"
msgstr ""

