msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-09-25 06:56+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /tmp/cicero-nZPK/manage-ag.xml:5(title) 
msgid "Managing Databases"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:7(primary) 
msgid "database"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:9(para) 
msgid "Every instance of a running <productname>PostgreSQL</productname> server manages one or more databases. Databases are therefore the topmost hierarchical level for organizing <acronym>SQL</acronym> objects (<quote>database objects</quote>). This chapter describes the properties of databases, and how to create, manage, and destroy them."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:19(title) 
msgid "Overview"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:22(primary) 
msgid "schema"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:25(para) 
msgid "A database is a named collection of <acronym>SQL</acronym> objects (<quote>database objects</quote>). Generally, every database object (tables, functions, etc.) belongs to one and only one database. (However there are a few system catalogs, for example <literal>pg_database</literal>, that belong to a whole cluster and are accessible from each database within the cluster.) More accurately, a database is a collection of schemas and the schemas contain the tables, functions, etc. So the full hierarchy is: server, database, schema, table (or some other kind of object, such as a function)."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:38(para) 
msgid "When connecting to the database server, a client must specify in its connection request the name of the database it wants to connect to. It is not possible to access more than one database per connection. However, an application is not restricted in the number of connections it opens to the same or other databases. Databases are physically separated and access control is managed at the connection level. If one <productname>PostgreSQL</productname> server instance is to house projects or users that should be separate and for the most part unaware of each other, it is therefore recommendable to put them into separate databases. If the projects or users are interrelated and should be able to use each other's resources, they should be put in the same database but possibly into separate schemas. Schemas are a purely logical structure and who can access what is managed by the privilege system. More information about managing schemas is in <xref linkend=\"ddl-schemas\"/>."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:56(para) 
msgid "Databases are created with the <command>CREATE DATABASE</command> command (see <xref linkend=\"manage-ag-createdb\"/>) and destroyed with the <command>DROP DATABASE</command> command (see <xref linkend=\"manage-ag-dropdb\"/>). To determine the set of existing databases, examine the <structname>pg_database</structname> system catalog, for example <synopsis>\nSELECT datname FROM pg_database;\n</synopsis> The <xref linkend=\"app-psql\"/> program's <literal>\\l</literal> meta-command and <option>-l</option> command-line option are also useful for listing the existing databases."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:72(para) 
msgid "The <acronym>SQL</acronym> standard calls databases <quote>catalogs</quote>, but there is no difference in practice."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:80(title) 
msgid "Creating a Database"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:82(primary) 
msgid "CREATE DATABASE"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:84(para) 
msgid "In order to create a database, the <productname>PostgreSQL</productname> server must be up and running (see <xref linkend=\"server-start\"/>)."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:90(para) 
msgid "Databases are created with the SQL command <xref linkend=\"sql-createdatabase\"/>: <synopsis>\nCREATE DATABASE <replaceable>name</replaceable>;\n</synopsis> where <replaceable>name</replaceable> follows the usual rules for <acronym>SQL</acronym> identifiers. The current role automatically becomes the owner of the new database. It is the privilege of the owner of a database to remove it later (which also removes all the objects in it, even if they have a different owner)."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:103(para) 
msgid "The creation of databases is a restricted operation. See <xref linkend=\"role-attributes\"/> for how to grant permission."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:108(para) 
msgid "Since you need to be connected to the database server in order to execute the <command>CREATE DATABASE</command> command, the question remains how the <emphasis>first</emphasis> database at any given site can be created. The first database is always created by the <command>initdb</command> command when the data storage area is initialized. (See <xref linkend=\"creating-cluster\"/>.) This database is called <literal>postgres</literal>.<indexterm><primary>postgres</primary></indexterm> So to create the first <quote>ordinary</quote> database you can connect to <literal>postgres</literal>."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:121(para) 
msgid "A second database, <literal>template1</literal>,<indexterm><primary>template1</primary></indexterm> is also created during database cluster initialization. Whenever a new database is created within the cluster, <literal>template1</literal> is essentially cloned. This means that any changes you make in <literal>template1</literal> are propagated to all subsequently created databases. Because of this, avoid creating objects in <literal>template1</literal> unless you want them propagated to every newly created database. More details appear in <xref linkend=\"manage-ag-templatedbs\"/>."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:134(para) 
msgid "As a convenience, there is a program you can execute from the shell to create new databases, <command>createdb</command>.<indexterm><primary>createdb</primary></indexterm><synopsis>\ncreatedb <replaceable class=\"parameter\">dbname</replaceable>\n</synopsis><command>createdb</command> does no magic. It connects to the <literal>postgres</literal> database and issues the <command>CREATE DATABASE</command> command, exactly as described above. The <xref linkend=\"app-createdb\"/> reference page contains the invocation details. Note that <command>createdb</command> without any arguments will create a database with the current user name."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:152(para) 
msgid "<xref linkend=\"client-authentication\"/> contains information about how to restrict who can connect to a given database."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:163(programlisting) 
#, no-wrap
msgid "\nCREATE DATABASE <replaceable>dbname</replaceable> OWNER <replaceable>rolename</replaceable>;\n"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:167(programlisting) 
#, no-wrap
msgid "\ncreatedb -O <replaceable>rolename</replaceable> <replaceable>dbname</replaceable>\n"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:158(para) 
msgid "Sometimes you want to create a database for someone else, and have him become the owner of the new database, so he can configure and manage it himself. To achieve that, use one of the following commands: <placeholder-1/> from the SQL environment, or: <placeholder-2/> from the shell. Only the superuser is allowed to create a database for someone else (that is, for a role you are not a member of)."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:177(title) 
msgid "Template Databases"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:179(para) 
msgid "<command>CREATE DATABASE</command> actually works by copying an existing database. By default, it copies the standard system database named <literal>template1</literal>.<indexterm><primary>template1</primary></indexterm> Thus that database is the <quote>template</quote> from which new databases are made. If you add objects to <literal>template1</literal>, these objects will be copied into subsequently created user databases. This behavior allows site-local modifications to the standard set of objects in databases. For example, if you install the procedural language <application>PL/Perl</application> in <literal>template1</literal>, it will automatically be available in user databases without any extra action being taken when those databases are created."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:193(para) 
msgid "There is a second standard system database named <literal>template0</literal>.<indexterm><primary>template0</primary></indexterm> This database contains the same data as the initial contents of <literal>template1</literal>, that is, only the standard objects predefined by your version of <productname>PostgreSQL</productname>. <literal>template0</literal> should never be changed after the database cluster has been initialized. By instructing <command>CREATE DATABASE</command> to copy <literal>template0</literal> instead of <literal>template1</literal>, you can create a <quote>virgin</quote> user database that contains none of the site-local additions in <literal>template1</literal>. This is particularly handy when restoring a <literal>pg_dump</literal> dump: the dump script should be restored in a virgin database to ensure that one recreates the correct contents of the dumped database, without conflicting with objects that might have been added to <literal>template1</literal> later on."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:212(para) 
msgid "Another common reason for copying <literal>template0</literal> instead of <literal>template1</literal> is that new encoding and locale settings can be specified when copying <literal>template0</literal>, whereas a copy of <literal>template1</literal> must use the same settings it does. This is because <literal>template1</literal> might contain encoding-specific or locale-specific data, while <literal>template0</literal> is known not to."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:223(programlisting) 
#, no-wrap
msgid "\nCREATE DATABASE <replaceable>dbname</replaceable> TEMPLATE template0;\n"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:227(programlisting) 
#, no-wrap
msgid "\ncreatedb -T template0 <replaceable>dbname</replaceable>\n"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:221(para) 
msgid "To create a database by copying <literal>template0</literal>, use: <placeholder-1/> from the SQL environment, or: <placeholder-2/> from the shell."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:233(para) 
msgid "It is possible to create additional template databases, and indeed one can copy any database in a cluster by specifying its name as the template for <command>CREATE DATABASE</command>. It is important to understand, however, that this is not (yet) intended as a general-purpose <quote><command>COPY DATABASE</command></quote> facility. The principal limitation is that no other sessions can be connected to the source database while it is being copied. <command>CREATE DATABASE</command> will fail if any other connection exists when it starts; during the copy operation, new connections to the source database are prevented."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:246(para) 
msgid "Two useful flags exist in <literal>pg_database</literal><indexterm><primary>pg_database</primary></indexterm> for each database: the columns <literal>datistemplate</literal> and <literal>datallowconn</literal>. <literal>datistemplate</literal> can be set to indicate that a database is intended as a template for <command>CREATE DATABASE</command>. If this flag is set, the database can be cloned by any user with <literal>CREATEDB</literal> privileges; if it is not set, only superusers and the owner of the database can clone it. If <literal>datallowconn</literal> is false, then no new connections to that database will be allowed (but existing sessions are not terminated simply by setting the flag false). The <literal>template0</literal> database is normally marked <literal>datallowconn = false</literal> to prevent its modification. Both <literal>template0</literal> and <literal>template1</literal> should always be marked with <literal>datistemplate = true</literal>."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:263(para) 
msgid "<literal>template1</literal> and <literal>template0</literal> do not have any special status beyond the fact that the name <literal>template1</literal> is the default source database name for <command>CREATE DATABASE</command>. For example, one could drop <literal>template1</literal> and recreate it from <literal>template0</literal> without any ill effects. This course of action might be advisable if one has carelessly added a bunch of junk in <literal>template1</literal>. (To delete <literal>template1</literal>, it must have <literal>pg_database.datistemplate = false</literal>.)"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:274(para) 
msgid "The <literal>postgres</literal> database is also created when a database cluster is initialized. This database is meant as a default database for users and applications to connect to. It is simply a copy of <literal>template1</literal> and can be dropped and recreated if necessary."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:284(title) 
msgid "Database Configuration"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:286(para) 
msgid "Recall from <xref linkend=\"runtime-config\"/> that the <productname>PostgreSQL</productname> server provides a large number of run-time configuration variables. You can set database-specific default values for many of these settings."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:300(programlisting) 
#, no-wrap
msgid "\nALTER DATABASE mydb SET geqo TO off;\n"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:293(para) 
msgid "For example, if for some reason you want to disable the <acronym>GEQO</acronym> optimizer for a given database, you'd ordinarily have to either disable it for all databases or make sure that every connecting client is careful to issue <literal>SET geqo TO off</literal>. To make this setting the default within a particular database, you can execute the command: <placeholder-1/> This will save the setting (but not set it immediately). In subsequent connections to this database it will appear as though <literal>SET geqo TO off;</literal> had been executed just before the session started. Note that users can still alter this setting during their sessions; it will only be the default. To undo any such setting, use <literal>ALTER DATABASE <replaceable>dbname</replaceable> RESET <replaceable>varname</replaceable></literal>."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:315(title) 
msgid "Destroying a Database"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:317(para) 
msgid "Databases are destroyed with the command <xref linkend=\"sql-dropdatabase\"/>:<indexterm><primary>DROP DATABASE</primary></indexterm><synopsis>\nDROP DATABASE <replaceable>name</replaceable>;\n</synopsis> Only the owner of the database, or a superuser, can drop a database. Dropping a database removes all objects that were contained within the database. The destruction of a database cannot be undone."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:330(para) 
msgid "You cannot execute the <command>DROP DATABASE</command> command while connected to the victim database. You can, however, be connected to any other database, including the <literal>template1</literal> database. <literal>template1</literal> would be the only option for dropping the last user database of a given cluster."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:339(para) 
msgid "For convenience, there is also a shell program to drop databases, <xref linkend=\"app-dropdb\"/>:<indexterm><primary>dropdb</primary></indexterm><synopsis>\ndropdb <replaceable class=\"parameter\">dbname</replaceable>\n</synopsis> (Unlike <command>createdb</command>, it is not the default action to drop the database with the current user name.)"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:351(title) 
msgid "Tablespaces"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:354(primary) 
msgid "tablespace"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:357(para) 
msgid "Tablespaces in <productname>PostgreSQL</productname> allow database administrators to define locations in the file system where the files representing database objects can be stored. Once created, a tablespace can be referred to by name when creating database objects."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:364(para) 
msgid "By using tablespaces, an administrator can control the disk layout of a <productname>PostgreSQL</productname> installation. This is useful in at least two ways. First, if the partition or volume on which the cluster was initialized runs out of space and cannot be extended, a tablespace can be created on a different partition and used until the system can be reconfigured."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:373(para) 
msgid "Second, tablespaces allow an administrator to use knowledge of the usage pattern of database objects to optimize performance. For example, an index which is very heavily used can be placed on a very fast, highly available disk, such as an expensive solid state device. At the same time a table storing archived data which is rarely used or not performance critical could be stored on a less expensive, slower disk system."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:387(programlisting) 
#, no-wrap
msgid "\nCREATE TABLESPACE fastspace LOCATION '/mnt/sda1/postgresql/data';\n"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:383(para) 
msgid "To define a tablespace, use the <xref linkend=\"sql-createtablespace\"/> command, for example:<indexterm><primary>CREATE TABLESPACE</primary></indexterm>: <placeholder-1/> The location must be an existing, empty directory that is owned by the <productname>PostgreSQL</productname> operating system user. All objects subsequently created within the tablespace will be stored in files underneath this directory."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:397(para) 
msgid "There is usually not much point in making more than one tablespace per logical file system, since you cannot control the location of individual files within a logical file system. However, <productname>PostgreSQL</productname> does not enforce any such limitation, and indeed it is not directly aware of the file system boundaries on your system. It just stores files in the directories you tell it to use."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:407(para) 
msgid "Creation of the tablespace itself must be done as a database superuser, but after that you can allow ordinary database users to use it. To do that, grant them the <literal>CREATE</literal> privilege on it."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:419(programlisting) 
#, no-wrap
msgid "\nCREATE TABLE foo(i int) TABLESPACE space1;\n"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:413(para) 
msgid "Tables, indexes, and entire databases can be assigned to particular tablespaces. To do so, a user with the <literal>CREATE</literal> privilege on a given tablespace must pass the tablespace name as a parameter to the relevant command. For example, the following creates a table in the tablespace <literal>space1</literal>: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:426(programlisting) 
#, no-wrap
msgid "\nSET default_tablespace = space1;\nCREATE TABLE foo(i int);\n"
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:424(para) 
msgid "Alternatively, use the <xref linkend=\"guc-default-tablespace\"/> parameter: <placeholder-1/> When <varname>default_tablespace</varname> is set to anything but an empty string, it supplies an implicit <literal>TABLESPACE</literal> clause for <command>CREATE TABLE</command> and <command>CREATE INDEX</command> commands that do not have an explicit one."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:436(para) 
msgid "There is also a <xref linkend=\"guc-temp-tablespaces\"/> parameter, which determines the placement of temporary tables and indexes, as well as temporary files that are used for purposes such as sorting large data sets. This can be a list of tablespace names, rather than only one, so that the load associated with temporary objects can be spread over multiple tablespaces. A random member of the list is picked each time a temporary object is to be created."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:446(para) 
msgid "The tablespace associated with a database is used to store the system catalogs of that database. Furthermore, it is the default tablespace used for tables, indexes, and temporary files created within the database, if no <literal>TABLESPACE</literal> clause is given and no other selection is specified by <varname>default_tablespace</varname> or <varname>temp_tablespaces</varname> (as appropriate). If a database is created without specifying a tablespace for it, it uses the same tablespace as the template database it is copied from."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:457(para) 
msgid "Two tablespaces are automatically created when the database cluster is initialized. The <literal>pg_global</literal> tablespace is used for shared system catalogs. The <literal>pg_default</literal> tablespace is the default tablespace of the <literal>template1</literal> and <literal>template0</literal> databases (and, therefore, will be the default tablespace for other databases as well, unless overridden by a <literal>TABLESPACE</literal> clause in <command>CREATE DATABASE</command>)."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:468(para) 
msgid "Once created, a tablespace can be used from any database, provided the requesting user has sufficient privilege. This means that a tablespace cannot be dropped until all objects in all databases using the tablespace have been removed."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:475(para) 
msgid "To remove an empty tablespace, use the <xref linkend=\"sql-droptablespace\"/> command."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:481(para) 
msgid "To determine the set of existing tablespaces, examine the <structname>pg_tablespace</structname> system catalog, for example <synopsis>\nSELECT spcname FROM pg_tablespace;\n</synopsis> The <xref linkend=\"app-psql\"/> program's <literal>\\db</literal> meta-command is also useful for listing the existing tablespaces."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:491(para) 
msgid "<productname>PostgreSQL</productname> makes use of symbolic links to simplify the implementation of tablespaces. This means that tablespaces can be used <emphasis>only</emphasis> on systems that support symbolic links."
msgstr ""

#: /tmp/cicero-nZPK/manage-ag.xml:498(para) 
msgid "The directory <filename>$PGDATA/pg_tblspc</filename> contains symbolic links that point to each of the non-built-in tablespaces defined in the cluster. Although not recommended, it is possible to adjust the tablespace layout by hand by redefining these links. Two warnings: do not do so while the server is running; and after you restart the server, update the <structname>pg_tablespace</structname> catalog with the new locations. (If you do not, <literal>pg_dump</literal> will continue to output the old tablespace locations.)"
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2.
#: /tmp/cicero-nZPK/manage-ag.xml:0(None) 
msgid "translator-credits"
msgstr ""

