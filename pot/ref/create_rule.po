msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-09-03 06:59+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /tmp/cicero-CbEv/ref/create_rule.xml:9(refentrytitle) /tmp/cicero-CbEv/ref/create_rule.xml:15(refname) /tmp/cicero-CbEv/ref/create_rule.xml:20(primary) 
msgid "CREATE RULE"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:10(manvolnum) 
msgid "7"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:11(refmiscinfo) 
msgid "SQL - Language Statements"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:16(refpurpose) 
msgid "define a new rewrite rule"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:25(replaceable) /tmp/cicero-CbEv/ref/create_rule.xml:106(replaceable) 
msgid "name"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:25(replaceable) /tmp/cicero-CbEv/ref/create_rule.xml:118(replaceable) 
msgid "event"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:26(replaceable) /tmp/cicero-CbEv/ref/create_rule.xml:129(replaceable) 
msgid "table"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:26(replaceable) /tmp/cicero-CbEv/ref/create_rule.xml:139(replaceable) 
msgid "condition"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:27(replaceable) /tmp/cicero-CbEv/ref/create_rule.xml:27(replaceable) /tmp/cicero-CbEv/ref/create_rule.xml:27(replaceable) /tmp/cicero-CbEv/ref/create_rule.xml:176(replaceable) 
msgid "command"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:24(synopsis) 
#, no-wrap
msgid "\nCREATE [ OR REPLACE ] RULE <placeholder-1/> AS ON <placeholder-2/>\n    TO <placeholder-3/> [ WHERE <placeholder-4/> ]\n    DO [ ALSO | INSTEAD ] { NOTHING | <placeholder-5/> | ( <placeholder-6/> ; <placeholder-7/> ... ) }\n"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:32(title) 
msgid "Description"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:34(para) 
msgid "<command>CREATE RULE</command> defines a new rule applying to a specified table or view. <command>CREATE OR REPLACE RULE</command> will either create a new rule, or replace an existing rule of the same name for the same table."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:42(para) 
msgid "The <productname>PostgreSQL</productname> rule system allows one to define an alternative action to be performed on insertions, updates, or deletions in database tables. Roughly speaking, a rule causes additional commands to be executed when a given command on a given table is executed. Alternatively, an <literal>INSTEAD</literal> rule can replace a given command by another, or cause a command not to be executed at all. Rules are used to implement table views as well. It is important to realize that a rule is really a command transformation mechanism, or command macro. The transformation happens before the execution of the commands starts. If you actually want an operation that fires independently for each physical row, you probably want to use a trigger, not a rule. More information about the rules system is in <xref linkend=\"rules\"/>."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:58(para) 
msgid "Presently, <literal>ON SELECT</literal> rules must be unconditional <literal>INSTEAD</literal> rules and must have actions that consist of a single <command>SELECT</command> command. Thus, an <literal>ON SELECT</literal> rule effectively turns the table into a view, whose visible contents are the rows returned by the rule's <command>SELECT</command> command rather than whatever had been stored in the table (if anything). It is considered better style to write a <command>CREATE VIEW</command> command than to create a real table and define an <literal>ON SELECT</literal> rule for it."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:70(para) 
msgid "You can create the illusion of an updatable view by defining <literal>ON INSERT</literal>, <literal>ON UPDATE</literal>, and <literal>ON DELETE</literal> rules (or any subset of those that's sufficient for your purposes) to replace update actions on the view with appropriate updates on other tables. If you want to support <command>INSERT RETURNING</command> and so on, then be sure to put a suitable <literal>RETURNING</literal> clause into each of these rules. Alternatively, an updatable view can be implemented using <literal>INSTEAD OF</literal> triggers (see <xref linkend=\"sql-createtrigger\"/>)."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:82(para) 
msgid "There is a catch if you try to use conditional rules for view updates: there <emphasis>must</emphasis> be an unconditional <literal>INSTEAD</literal> rule for each action you wish to allow on the view. If the rule is conditional, or is not <literal>INSTEAD</literal>, then the system will still reject attempts to perform the update action, because it thinks it might end up trying to perform the action on the dummy table of the view in some cases. If you want to handle all the useful cases in conditional rules, add an unconditional <literal>DO INSTEAD NOTHING</literal> rule to ensure that the system understands it will never be called on to update the dummy table. Then make the conditional rules non-<literal>INSTEAD</literal>; in the cases where they are applied, they add to the default <literal>INSTEAD NOTHING</literal> action. (This method does not currently work to support <literal>RETURNING</literal> queries, however.)"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:102(title) 
msgid "Parameters"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:108(para) 
msgid "The name of a rule to create. This must be distinct from the name of any other rule for the same table. Multiple rules on the same table and same event type are applied in alphabetical name order."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:120(para) 
msgid "The event is one of <literal>SELECT</literal>, <literal>INSERT</literal>, <literal>UPDATE</literal>, or <literal>DELETE</literal>."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:131(para) 
msgid "The name (optionally schema-qualified) of the table or view the rule applies to."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:141(para) 
msgid "Any <acronym>SQL</acronym> conditional expression (returning <type>boolean</type>). The condition expression cannot refer to any tables except <literal>NEW</literal> and <literal>OLD</literal>, and cannot contain aggregate functions."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:151(option) 
msgid "INSTEAD"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:153(para) 
msgid "<literal>INSTEAD</literal> indicates that the commands should be executed <emphasis>instead of</emphasis> the original command."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:160(option) 
msgid "ALSO"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:162(para) 
msgid "<literal>ALSO</literal> indicates that the commands should be executed <emphasis>in addition to</emphasis> the original command."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:167(para) 
msgid "If neither <literal>ALSO</literal> nor <literal>INSTEAD</literal> is specified, <literal>ALSO</literal> is the default."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:178(para) 
msgid "The command or commands that make up the rule action. Valid commands are <command>SELECT</command>, <command>INSERT</command>, <command>UPDATE</command>, <command>DELETE</command>, or <command>NOTIFY</command>."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:188(para) 
msgid "Within <replaceable class=\"parameter\">condition</replaceable> and <replaceable class=\"parameter\">command</replaceable>, the special table names <literal>NEW</literal> and <literal>OLD</literal> can be used to refer to values in the referenced table. <literal>NEW</literal> is valid in <literal>ON INSERT</literal> and <literal>ON UPDATE</literal> rules to refer to the new row being inserted or updated. <literal>OLD</literal> is valid in <literal>ON UPDATE</literal> and <literal>ON DELETE</literal> rules to refer to the existing row being updated or deleted."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:202(title) 
msgid "Notes"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:204(para) 
msgid "You must be the owner of a table to create or change rules for it."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:208(para) 
msgid "In a rule for <literal>INSERT</literal>, <literal>UPDATE</literal>, or <literal>DELETE</literal> on a view, you can add a <literal>RETURNING</literal> clause that emits the view's columns. This clause will be used to compute the outputs if the rule is triggered by an <command>INSERT RETURNING</command>, <command>UPDATE RETURNING</command>, or <command>DELETE RETURNING</command> command respectively. When the rule is triggered by a command without <literal>RETURNING</literal>, the rule's <literal>RETURNING</literal> clause will be ignored. The current implementation allows only unconditional <literal>INSTEAD</literal> rules to contain <literal>RETURNING</literal>; furthermore there can be at most one <literal>RETURNING</literal> clause among all the rules for the same event. (This ensures that there is only one candidate <literal>RETURNING</literal> clause to be used to compute the results.) <literal>RETURNING</literal> queries on the view will be rejected if there is no <literal>RETURNING</literal> clause in any available rule."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:233(programlisting) 
#, no-wrap
msgid "\nCREATE RULE \"_RETURN\" AS\n    ON SELECT TO t1\n    DO INSTEAD\n        SELECT * FROM t2;\n\nCREATE RULE \"_RETURN\" AS\n    ON SELECT TO t2\n    DO INSTEAD\n        SELECT * FROM t1;\n\nSELECT * FROM t1;\n"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:225(para) 
msgid "It is very important to take care to avoid circular rules. For example, though each of the following two rule definitions are accepted by <productname>PostgreSQL</productname>, the <command>SELECT</command> command would cause <productname>PostgreSQL</productname> to report an error because of recursive expansion of a rule: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:254(programlisting) 
#, no-wrap
msgid "\nCREATE RULE notify_me AS ON UPDATE TO mytable DO ALSO NOTIFY mytable;\n\nUPDATE mytable SET name = 'foo' WHERE id = 42;\n"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:248(para) 
msgid "Presently, if a rule action contains a <command>NOTIFY</command> command, the <command>NOTIFY</command> command will be executed unconditionally, that is, the <command>NOTIFY</command> will be issued even if there are not any rows that the rule should apply to. For example, in: <placeholder-1/> one <command>NOTIFY</command> event will be sent during the <command>UPDATE</command>, whether or not there are any rows that match the condition <literal>id = 42</literal>. This is an implementation restriction that might be fixed in future releases."
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:267(title) 
msgid "Compatibility"
msgstr ""

#: /tmp/cicero-CbEv/ref/create_rule.xml:269(para) 
msgid "<command>CREATE RULE</command> is a <productname>PostgreSQL</productname> language extension, as is the entire query rewrite system."
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2.
#: /tmp/cicero-CbEv/ref/create_rule.xml:0(None) 
msgid "translator-credits"
msgstr ""

