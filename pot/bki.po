msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-09-02 11:29+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /tmp/cicero-hapq/bki.xml:6(title) 
msgid "<acronym>BKI</acronym> Backend Interface"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:8(para) 
msgid "Backend Interface (<acronym>BKI</acronym>) files are scripts in a special language that is understood by the <productname>PostgreSQL</productname> backend when running in the <quote>bootstrap</quote> mode. The bootstrap mode allows system catalogs to be created and filled from scratch, whereas ordinary SQL commands require the catalogs to exist already. <acronym>BKI</acronym> files can therefore be used to create the database system in the first place. (And they are probably not useful for anything else.)"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:20(para) 
msgid "<application>initdb</application> uses a <acronym>BKI</acronym> file to do part of its job when creating a new database cluster. The input file used by <application>initdb</application> is created as part of building and installing <productname>PostgreSQL</productname> by a program named <filename>genbki.pl</filename>, which reads some specially formatted C header files in the <filename>src/include/catalog/</filename> directory of the source tree. The created <acronym>BKI</acronym> file is called <filename>postgres.bki</filename> and is normally installed in the <filename>share</filename> subdirectory of the installation tree."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:33(para) 
msgid "Related information can be found in the documentation for <application>initdb</application>."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:39(title) 
msgid "<acronym>BKI</acronym> File Format"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:41(para) 
msgid "This section describes how the <productname>PostgreSQL</productname> backend interprets <acronym>BKI</acronym> files. This description will be easier to understand if the <filename>postgres.bki</filename> file is at hand as an example."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:48(para) 
msgid "<acronym>BKI</acronym> input consists of a sequence of commands. Commands are made up of a number of tokens, depending on the syntax of the command. Tokens are usually separated by whitespace, but need not be if there is no ambiguity. There is no special command separator; the next token that syntactically cannot belong to the preceding command starts a new one. (Usually you would put a new command on a new line, for clarity.) Tokens can be certain key words, special characters (parentheses, commas, etc.), numbers, or double-quoted strings. Everything is case sensitive."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:60(para) 
msgid "Lines starting with <literal>#</literal> are ignored."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:67(title) 
msgid "<acronym>BKI</acronym> Commands"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:71(term) 
msgid "<literal>create</literal><replaceable class=\"parameter\">tablename</replaceable><replaceable class=\"parameter\">tableoid</replaceable><optional><literal>bootstrap</literal></optional><optional><literal>shared_relation</literal></optional><optional><literal>without_oids</literal></optional><optional><literal>rowtype_oid</literal><replaceable>oid</replaceable></optional> (<replaceable class=\"parameter\">name1</replaceable> = <replaceable class=\"parameter\">type1</replaceable><optional>, <replaceable class=\"parameter\">name2</replaceable> = <replaceable class=\"parameter\">type2</replaceable>, ...</optional>)"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:86(para) 
msgid "Create a table named <replaceable class=\"parameter\">tablename</replaceable>, and having the OID <replaceable class=\"parameter\">tableoid</replaceable>, with the columns given in parentheses."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:93(para) 
msgid "The following column types are supported directly by <filename>bootstrap.c</filename>: <type>bool</type>, <type>bytea</type>, <type>char</type> (1 byte), <type>name</type>, <type>int2</type>, <type>int4</type>, <type>regproc</type>, <type>regclass</type>, <type>regtype</type>, <type>text</type>, <type>oid</type>, <type>tid</type>, <type>xid</type>, <type>cid</type>, <type>int2vector</type>, <type>oidvector</type>, <type>_int4</type> (array), <type>_text</type> (array), <type>_oid</type> (array), <type>_char</type> (array), <type>_aclitem</type> (array). Although it is possible to create tables containing columns of other types, this cannot be done until after <structname>pg_type</structname> has been created and filled with appropriate entries. (That effectively means that only these column types can be used in bootstrapped tables, but non-bootstrap catalogs can contain any built-in type.)"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:112(para) 
msgid "When <literal>bootstrap</literal> is specified, the table will only be created on disk; nothing is entered into <structname>pg_class</structname>, <structname>pg_attribute</structname>, etc, for it. Thus the table will not be accessible by ordinary SQL operations until such entries are made the hard way (with <literal>insert</literal> commands). This option is used for creating <structname>pg_class</structname> etc themselves."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:123(para) 
msgid "The table is created as shared if <literal>shared_relation</literal> is specified. It will have OIDs unless <literal>without_oids</literal> is specified. The table's row type OID (<structname>pg_type</structname> OID) can optionally be specified via the <literal>rowtype_oid</literal> clause; if not specified, an OID is automatically generated for it. (The <literal>rowtype_oid</literal> clause is useless if <literal>bootstrap</literal> is specified, but it can be provided anyway for documentation.)"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:138(literal) /tmp/cicero-hapq/bki.xml:305(literal) 
msgid "open"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:138(replaceable) /tmp/cicero-hapq/bki.xml:152(replaceable) /tmp/cicero-hapq/bki.xml:193(replaceable) /tmp/cicero-hapq/bki.xml:225(replaceable) 
msgid "tablename"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:142(para) 
msgid "Open the table named <replaceable class=\"parameter\">tablename</replaceable> for insertion of data. Any currently open table is closed."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:152(literal) /tmp/cicero-hapq/bki.xml:290(literal) /tmp/cicero-hapq/bki.xml:315(literal) 
msgid "close"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:156(para) 
msgid "Close the open table. The name of the table can be given as a cross-check, but this is not required."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:164(term) 
msgid "<literal>insert</literal><optional><literal>OID =</literal><replaceable class=\"parameter\">oid_value</replaceable></optional><literal>(</literal><replaceable class=\"parameter\">value1</replaceable><replaceable class=\"parameter\">value2</replaceable> ... <literal>)</literal>"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:169(para) 
msgid "Insert a new row into the open table using <replaceable class=\"parameter\">value1</replaceable>, <replaceable class=\"parameter\">value2</replaceable>, etc., for its column values and <replaceable class=\"parameter\">oid_value</replaceable> for its OID. If <replaceable class=\"parameter\">oid_value</replaceable> is zero (0) or the clause is omitted, and the table has OIDs, then the next available OID is assigned."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:180(para) 
msgid "NULL values can be specified using the special key word <literal>_null_</literal>. Values containing spaces must be double quoted."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:190(literal) 
msgid "declare"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:190(literal) 
msgid "unique"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:191(literal) 
msgid "index"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:191(replaceable) 
msgid "indexname"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:192(replaceable) 
msgid "indexoid"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:193(literal) /tmp/cicero-hapq/bki.xml:225(literal) 
msgid "on"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:194(literal) 
msgid "using"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:194(replaceable) 
msgid "amname"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:195(literal) 
msgid "("
msgstr ""

#: /tmp/cicero-hapq/bki.xml:195(replaceable) 
msgid "opclass1"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:196(replaceable) 
msgid "name1"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:197(optional) 
msgid ", ..."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:197(literal) 
msgid ")"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:201(para) 
msgid "Create an index named <replaceable class=\"parameter\">indexname</replaceable>, having OID <replaceable class=\"parameter\">indexoid</replaceable>, on the table named <replaceable class=\"parameter\">tablename</replaceable>, using the <replaceable class=\"parameter\">amname</replaceable> access method. The fields to index are called <replaceable class=\"parameter\">name1</replaceable>, <replaceable class=\"parameter\">name2</replaceable> etc., and the operator classes to use are <replaceable class=\"parameter\">opclass1</replaceable>, <replaceable class=\"parameter\">opclass2</replaceable> etc., respectively. The index file is created and appropriate catalog entries are made for it, but the index contents are not initialized by this command."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:222(literal) 
msgid "declare toast"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:223(replaceable) 
msgid "toasttableoid"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:224(replaceable) 
msgid "toastindexoid"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:229(para) 
msgid "Create a TOAST table for the table named <replaceable class=\"parameter\">tablename</replaceable>. The TOAST table is assigned OID <replaceable class=\"parameter\">toasttableoid</replaceable> and its index is assigned OID <replaceable class=\"parameter\">toastindexoid</replaceable>. As with <literal>declare index</literal>, filling of the index is postponed."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:243(literal) /tmp/cicero-hapq/bki.xml:330(literal) 
msgid "build indices"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:246(para) 
msgid "Fill in the indices that have previously been declared."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:256(title) 
msgid "Structure of the Bootstrap <acronym>BKI</acronym> File"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:258(para) 
msgid "The <literal>open</literal> command cannot be used until the tables it uses exist and have entries for the table that is to be opened. (These minimum tables are <structname>pg_class</structname>, <structname>pg_attribute</structname>, <structname>pg_proc</structname>, and <structname>pg_type</structname>.) To allow those tables themselves to be filled, <literal>create</literal> with the <literal>bootstrap</literal> option implicitly opens the created table for data insertion."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:268(para) 
msgid "Also, the <literal>declare index</literal> and <literal>declare toast</literal> commands cannot be used until the system catalogs they need have been created and filled in."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:279(para) 
msgid "<literal>create bootstrap</literal> one of the critical tables"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:284(para) 
msgid "<literal>insert</literal> data describing at least the critical tables"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:294(para) 
msgid "Repeat for the other critical tables."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:299(para) 
msgid "<literal>create</literal> (without <literal>bootstrap</literal>) a noncritical table"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:309(para) 
msgid "<literal>insert</literal> desired data"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:319(para) 
msgid "Repeat for the other noncritical tables."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:324(para) 
msgid "Define indexes and toast tables."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:274(para) 
msgid "Thus, the structure of the <filename>postgres.bki</filename> file has to be: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:336(para) 
msgid "There are doubtless other, undocumented ordering dependencies."
msgstr ""

#: /tmp/cicero-hapq/bki.xml:342(title) 
msgid "Example"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:350(programlisting) 
#, no-wrap
msgid "\ncreate test_table 420 (cola = int4, colb = text)\nopen test_table\ninsert OID=421 ( 1 \"value1\" )\ninsert OID=422 ( 2 _null_ )\nclose test_table\n"
msgstr ""

#: /tmp/cicero-hapq/bki.xml:344(para) 
msgid "The following sequence of commands will create the table <literal>test_table</literal> with OID 420, having two columns <literal>cola</literal> and <literal>colb</literal> of type <type>int4</type> and <type>text</type>, respectively, and insert two rows into the table: <placeholder-1/>"
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2.
#: /tmp/cicero-hapq/bki.xml:0(None) 
msgid "translator-credits"
msgstr ""

