msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-09-26 12:45+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: /tmp/cicero-HnEQ/docguide.xml:5(title) 
msgid "Documentation"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:13(para) 
msgid "Plain text, for pre-installation information"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:18(para) 
msgid "<acronym>HTML</acronym>, for on-line browsing and reference"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:23(para) 
msgid "PDF or PostScript, for printing"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:28(para) 
msgid "man pages, for quick reference."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:7(para) 
msgid "<productname>PostgreSQL</productname> has four primary documentation formats: <placeholder-1/> Additionally, a number of plain-text <filename>README</filename> files can be found throughout the <productname>PostgreSQL</productname> source tree, documenting various implementation issues."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:39(para) 
msgid "<acronym>HTML</acronym> documentation and man pages are part of a standard distribution and are installed by default. PDF and PostScript format documentation is available separately for download."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:47(title) 
msgid "DocBook"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:48(para) 
msgid "The documentation sources are written in <firstterm>DocBook</firstterm>, which is a markup language superficially similar to <acronym>HTML</acronym>. Both of these languages are applications of the <firstterm>Standard Generalized Markup Language</firstterm>, <acronym>SGML</acronym>, which is essentially a language for describing other languages. In what follows, the terms DocBook and <acronym>SGML</acronym> are both used, but technically they are not interchangeable."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:59(para) 
msgid "<productname>DocBook</productname> allows an author to specify the structure and content of a technical document without worrying about presentation details. A document style defines how that content is rendered into one of several final forms. DocBook is maintained by the <ulink url=\"http://www.oasis-open.org\"> OASIS group</ulink>. The <ulink url=\"http://www.oasis-open.org/docbook/\"> official DocBook site</ulink> has good introductory and reference documentation and a complete O'Reilly book for your online reading pleasure. The <ulink url=\"http://newbiedoc.sourceforge.net/metadoc/docbook-guide.html\"> NewbieDoc Docbook Guide</ulink> is very helpful for beginners. The <ulink url=\"http://www.freebsd.org/docproj/docproj.html\"> FreeBSD Documentation Project</ulink> also uses DocBook and has some good information, including a number of style guidelines that might be worth considering."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:79(title) 
msgid "Tool Sets"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:87(ulink) 
msgid "DocBook DTD"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:89(para) 
msgid "This is the definition of DocBook itself. We currently use version 4.2; you cannot use later or earlier versions. You need the <acronym>SGML</acronym> variant of the DocBook DTD, but to build man pages you also need the <acronym>XML</acronym> variant of the same version."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:100(ulink) 
msgid "ISO 8879 character entities"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:102(para) 
msgid "These are required by DocBook but are distributed separately because they are maintained by ISO."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:110(ulink) 
msgid "DocBook DSSSL Stylesheets"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:112(para) 
msgid "These contain the processing instructions for converting the DocBook sources to other formats, such as <acronym>HTML</acronym>."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:121(ulink) 
msgid "DocBook XSL Stylesheets"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:123(para) 
msgid "This is another stylesheet for converting DocBook to other formats. We currently use this to produce man pages and optionally HTMLHelp. You can also use this toolchain to produce HTML or PDF output, but official PostgreSQL releases use the DSSSL stylesheets for that."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:134(ulink) 
msgid "OpenJade"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:136(para) 
msgid "This is the base package of <acronym>SGML</acronym> processing. It contains an <acronym>SGML</acronym> parser, a <acronym>DSSSL</acronym> processor (that is, a program to convert <acronym>SGML</acronym> to other formats using <acronym>DSSSL</acronym> stylesheets), as well as a number of related tools. <productname>Jade</productname> is now being maintained by the OpenJade group, no longer by James Clark."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:149(term) 
msgid "<ulink url=\"http://xmlsoft.org/XSLT/\">Libxslt</ulink> for <command>xsltproc</command>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:151(para) 
msgid "This is the processing tool to use with the XSLT stylesheets (like <command>jade</command> is the processing tool for DSSSL stylesheets)."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:160(ulink) 
msgid "JadeTeX"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:162(para) 
msgid "If you want to, you can also install <productname>JadeTeX</productname> to use <productname>TeX</productname> as a formatting backend for <productname>Jade</productname>. <application>JadeTeX</application> can create PostScript or <acronym>PDF</acronym> files (the latter with bookmarks)."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:171(para) 
msgid "However, the output from <application>JadeTeX</application> is inferior to what you get from the <acronym>RTF</acronym> backend. Particular problem areas are tables and various artifacts of vertical and horizontal spacing. Also, there is no opportunity to manually polish the results."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:81(para) 
msgid "The following tools are used to process the documentation. Some might be optional, as noted. <placeholder-1/>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:183(para) 
msgid "We have documented experience with several installation methods for the various tools that are needed to process the documentation. These will be described below. There might be some other packaged distributions for these tools. Please report package status to the documentation mailing list, and we will include that information here."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:193(title) 
msgid "<productname>Linux</productname><acronym>RPM</acronym> Installation"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:195(para) 
msgid "Most vendors provide a complete RPM set for DocBook processing in their distribution. Look for an <quote>SGML</quote> option while installing, or the following packages: <filename>sgml-common</filename>, <filename>docbook</filename>, <filename>stylesheets</filename>, <filename>openjade</filename> (or <filename>jade</filename>). Possibly <filename>sgml-tools</filename> will be needed as well. If your distributor does not provide these then you should be able to make use of the packages from some other, reasonably compatible vendor."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:209(title) 
msgid "FreeBSD Installation"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:219(filename) 
msgid "textproc/sp"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:222(filename) 
msgid "textproc/openjade"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:225(filename) 
msgid "textproc/iso8879"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:228(filename) 
msgid "textproc/dsssl-docbook-modular"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:231(filename) 
msgid "textproc/docbook-420"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:211(para) 
msgid "The FreeBSD Documentation Project is itself a heavy user of DocBook, so it comes as no surprise that there is a full set of <quote>ports</quote> of the documentation tools available on FreeBSD. The following ports need to be installed to build the documentation on FreeBSD. <placeholder-1/>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:236(para) 
msgid "A number of things from <filename>/usr/ports/print</filename> (<filename>tex</filename>, <filename>jadetex</filename>) might also be of interest."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:246(programlisting) 
#, no-wrap
msgid "\nCATALOG \"openjade/catalog\"\nCATALOG \"iso8879/catalog\"\nCATALOG \"docbook/dsssl/modular/catalog\"\nCATALOG \"docbook/4.2/catalog\"\n"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:242(para) 
msgid "It's possible that the ports do not update the main catalog file in <filename>/usr/local/share/sgml/catalog.ports</filename> or order isn't proper . Be sure to have the following lines in beginning of file: <placeholder-1/> If you do not want to edit the file you can also set the environment variable <envar>SGML_CATALOG_FILES</envar> to a colon-separated list of catalog files (such as the one above)."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:257(para) 
msgid "More information about the FreeBSD documentation tools can be found in the <ulink url=\"http://www.freebsd.org/doc/en_US.ISO8859-1/books/fdp-primer/tools.html\"> FreeBSD Documentation Project's instructions</ulink>."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:265(title) 
msgid "Debian Packages"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:271(programlisting) 
#, no-wrap
msgid "\napt-get install docbook docbook-dsssl docbook-xsl openjade1.3 xsltproc\n"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:267(para) 
msgid "There is a full set of packages of the documentation tools available for <productname>Debian GNU/Linux</productname>. To install, simply use: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:278(title) 
msgid "Manual Installation from Source"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:280(para) 
msgid "The manual installation process of the DocBook tools is somewhat complex, so if you have pre-built packages available, use them. We describe here only a standard setup, with reasonably standard installation paths, and no <quote>fancy</quote> features. For details, you should study the documentation of the respective package, and read <acronym>SGML</acronym> introductory material."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:290(title) 
msgid "Installing OpenJade"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:294(para) 
msgid "The installation of OpenJade offers a GNU-style <literal>./configure; make; make install</literal> build process. Details can be found in the OpenJade source distribution. In a nutshell: <synopsis>\n./configure --enable-default-catalog=/usr/local/share/sgml/catalog\nmake\nmake install\n</synopsis> Be sure to remember where you put the <quote>default catalog</quote>; you will need it below. You can also leave it off, but then you will have to set the environment variable <envar>SGML_CATALOG_FILES</envar> to point to the file whenever you use <application>jade</application> later on. (This method is also an option if OpenJade is already installed and you want to install the rest of the toolchain locally.)"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:315(para) 
msgid "Some users have reported encountering a segmentation fault using openjade 1.4devel to build the PDFs, with a message like: <screen>\nopenjade:./stylesheet.dsl:664:2:E: flow object not accepted by port; only display flow objects accepted\nmake: *** [postgres-A4.tex-pdf] Segmentation fault\n</screen> Downgrading to openjade 1.3 should get rid of this error."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:329(para) 
msgid "Additionally, you should install the files <filename>dsssl.dtd</filename>, <filename>fot.dtd</filename>, <filename>style-sheet.dtd</filename>, and <filename>catalog</filename> from the <filename>dsssl</filename> directory somewhere, perhaps into <filename>/usr/local/share/sgml/dsssl</filename>. It's probably easiest to copy the entire directory: <synopsis>\ncp -R dsssl /usr/local/share/sgml\n</synopsis>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:348(programlisting) 
#, no-wrap
msgid "\nCATALOG \"dsssl/catalog\"\n"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:344(para) 
msgid "Finally, create the file <filename>/usr/local/share/sgml/catalog</filename> and add this line to it: <placeholder-1/> (This is a relative path reference to the file installed in <xref linkend=\"doc-openjade-install\"/>. Be sure to adjust it if you chose your installation layout differently.)"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:360(title) 
msgid "Installing the <productname>DocBook</productname><acronym>DTD</acronym> Kit"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:364(para) 
msgid "Obtain the <ulink url=\"http://www.docbook.org/sgml/4.2/docbook-4.2.zip\"> DocBook V4.2 distribution</ulink>."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:371(para) 
msgid "Create the directory <filename>/usr/local/share/sgml/docbook-4.2</filename> and change to it. (The exact location is irrelevant, but this one is reasonable within the layout we are following here.) <screen>\n<prompt>$ </prompt><userinput>mkdir /usr/local/share/sgml/docbook-4.2</userinput>\n<prompt>$ </prompt><userinput>cd /usr/local/share/sgml/docbook-4.2</userinput>\n</screen>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:384(para) 
msgid "Unpack the archive: <screen>\n<prompt>$ </prompt><userinput>unzip -a ...../docbook-4.2.zip</userinput>\n</screen> (The archive will unpack its files into the current directory.)"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:399(programlisting) 
#, no-wrap
msgid "\nCATALOG \"docbook-4.2/docbook.cat\"\n"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:394(para) 
msgid "Edit the file <filename>/usr/local/share/sgml/catalog</filename> (or whatever you told jade during installation) and put a line like this into it: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:406(para) 
msgid "Download the <ulink url=\"http://www.oasis-open.org/cover/ISOEnts.zip\"> ISO 8879 character entities archive</ulink>, unpack it, and put the files in the same directory you put the DocBook files in: <screen>\n<prompt>$ </prompt><userinput>cd /usr/local/share/sgml/docbook-4.2</userinput>\n<prompt>$ </prompt><userinput>unzip ...../ISOEnts.zip</userinput>\n</screen>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:420(programlisting) 
#, no-wrap
msgid "\nperl -pi -e 's/iso-(.*).gml/ISO\\1/g' docbook.cat\n"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:418(para) 
msgid "Run the following command in the directory with the DocBook and ISO files: <placeholder-1/> (This fixes a mixup between the names used in the DocBook catalog file and the actual names of the ISO character entity files.)"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:432(title) 
msgid "Installing the DocBook <acronym>DSSSL</acronym> Style Sheets"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:434(para) 
msgid "To install the style sheets, unzip and untar the distribution and move it to a suitable place, for example <filename>/usr/local/share/sgml</filename>. (The archive will automatically create a subdirectory.) <screen>\n<prompt>$</prompt> <userinput>gunzip docbook-dsssl-1.<replaceable>xx</replaceable>.tar.gz</userinput>\n<prompt>$</prompt> <userinput>tar -C /usr/local/share/sgml -xf docbook-dsssl-1.<replaceable>xx</replaceable>.tar</userinput>\n</screen>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:449(programlisting) 
#, no-wrap
msgid "\nCATALOG \"docbook-dsssl-1.<replaceable>xx</replaceable>/catalog\"\n"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:445(para) 
msgid "The usual catalog entry in <filename>/usr/local/share/sgml/catalog</filename> can also be made: <placeholder-1/> Because stylesheets change rather often, and it's sometimes beneficial to try out alternative versions, <productname>PostgreSQL</productname> doesn't use this catalog entry. See <xref linkend=\"docguide-toolsets-configure\"/> for information about how to select the stylesheets instead."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:461(title) 
msgid "Installing <productname>JadeTeX</productname>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:463(para) 
msgid "To install and use <productname>JadeTeX</productname>, you will need a working installation of <productname>TeX</productname> and <productname>LaTeX2e</productname>, including the supported <productname>tools</productname> and <productname>graphics</productname> packages, <productname>Babel</productname>, <productname><acronym>AMS</acronym> fonts</productname> and <productname>AMS-LaTeX</productname>, the <productname><acronym>PSNFSS</acronym></productname> extension and companion kit of <quote>the 35 fonts</quote>, the <productname>dvips</productname> program for generating <productname>PostScript</productname>, the macro packages <productname>fancyhdr</productname>, <productname>hyperref</productname>, <productname>minitoc</productname>, <productname>url</productname> and <productname>ot2enc</productname>. All of these can be found on your friendly neighborhood <ulink url=\"http://www.ctan.org\"><acronym>CTAN</acronym> site</ulink>. The installation of the <application>TeX</application> base system is far beyond the scope of this introduction. Binary packages should be available for any system that can run <application>TeX</application>."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:489(para) 
msgid "Before you can use <application>JadeTeX</application> with the <productname>PostgreSQL</productname> documentation sources, you will need to increase the size of <application>TeX</application>'s internal data structures. Details on this can be found in the <application>JadeTeX</application> installation instructions."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:498(para) 
msgid "Once that is finished you can install <application>JadeTeX</application>: <screen>\n<prompt>$</prompt> <userinput>gunzip jadetex-<replaceable>xxx</replaceable>.tar.gz</userinput>\n<prompt>$</prompt> <userinput>tar xf jadetex-<replaceable>xxx</replaceable>.tar</userinput>\n<prompt>$</prompt> <userinput>cd jadetex</userinput>\n<prompt>$</prompt> <userinput>make install</userinput>\n<prompt>$</prompt> <userinput>mktexlsr</userinput>\n</screen> The last two need to be done as <systemitem>root</systemitem>."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:515(title) 
msgid "Detection by <command>configure</command>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:517(para) 
msgid "Before you can build the documentation you need to run the <filename>configure</filename> script as you would when building the <productname>PostgreSQL</productname> programs themselves. Check the output near the end of the run, it should look something like this: <screen>\n<computeroutput>\nchecking for onsgmls... onsgmls\nchecking for openjade... openjade\nchecking for DocBook V4.2... yes\nchecking for DocBook stylesheets... /usr/share/sgml/docbook/stylesheet/dsssl/modular\nchecking for collateindex.pl... /usr/bin/collateindex.pl\nchecking for xsltproc... xsltproc\nchecking for osx... osx\n</computeroutput>\n</screen> If neither <filename>onsgmls</filename> nor <filename>nsgmls</filename> were found then some of the following tests will be skipped. <filename>nsgmls</filename> is part of the Jade package. You can pass the environment variables <envar>JADE</envar> and <envar>NSGMLS</envar> to configure to point to the programs if they are not found automatically. If <quote>DocBook V4.2</quote> was not found then you did not install the DocBook DTD kit in a place where Jade can find it, or you have not set up the catalog files correctly. See the installation hints above. The DocBook stylesheets are looked for in a number of relatively standard places, but if you have them some other place then you should set the environment variable <envar>DOCBOOKSTYLE</envar> to the location and rerun <filename>configure</filename> afterwards."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:554(title) 
msgid "Building The Documentation"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:556(para) 
msgid "Once you have everything set up, change to the directory <filename>doc/src/sgml</filename> and run one of the commands described in the following subsections to build the documentation. (Remember to use GNU make.)"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:564(title) 
msgid "HTML"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:566(para) 
msgid "To build the <acronym>HTML</acronym> version of the documentation: <screen>\n<prompt>doc/src/sgml$ </prompt><userinput>gmake html</userinput>\n</screen> This is also the default target. The output appears in the subdirectory <filename>html</filename>."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:575(para) 
msgid "To create a proper index, the build might process several identical stages. If you do not care about the index, and just want to proof-read the output, use <literal>draft</literal>: <screen>\n<prompt>doc/src/sgml$ </prompt><userinput>gmake draft</userinput>\n</screen>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:584(para) 
msgid "To build the documentation as a single HTML page, use: <screen>\n<prompt>doc/src/sgml$ </prompt><userinput>gmake postgres.html</userinput>\n</screen>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:593(title) 
msgid "Manpages"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:602(programlisting) 
#, no-wrap
msgid "\ncd doc/src/sgml\ngmake man\n"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:595(para) 
msgid "We use the DocBook XSL stylesheets to convert <productname>DocBook</productname><sgmltag>refentry</sgmltag> pages to *roff output suitable for man pages. The man pages are also distributed as a tar archive, similar to the <acronym>HTML</acronym> version. To create the man pages, use the commands: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:610(title) 
msgid "Print Output via <application>JadeTeX</application>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:619(para) 
msgid "To generate PostScript via <acronym>DVI</acronym> in A4 format: <screen>\n<prompt>doc/src/sgml$ </prompt><userinput>gmake postgres-A4.ps</userinput>\n</screen> In U.S. letter format: <screen>\n<prompt>doc/src/sgml$ </prompt><userinput>gmake postgres-US.ps</userinput>\n</screen>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:632(para) 
msgid "To make a <acronym>PDF</acronym>: <screen>\n<prompt>doc/src/sgml$ </prompt><userinput>gmake postgres-A4.pdf</userinput>\n</screen> or: <screen>\n<prompt>doc/src/sgml$ </prompt><userinput>gmake postgres-US.pdf</userinput>\n</screen> (Of course you can also make a <acronym>PDF</acronym> version from the PostScript, but if you generate <acronym>PDF</acronym> directly, it will have hyperlinks and other enhanced features.)"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:612(para) 
msgid "If you want to use <application>JadeTex</application> to produce a printable rendition of the documentation, you can use one of the following commands: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:654(programlisting) 
#, no-wrap
msgid "\nhash_extra.jadetex  = 200000\nhash_extra.pdfjadetex  = 200000\npool_size.jadetex = 2000000\npool_size.pdfjadetex = 2000000\nstring_vacancies.jadetex = 150000\nstring_vacancies.pdfjadetex = 150000\nmax_strings.jadetex = 300000\nmax_strings.pdfjadetex = 300000\nsave_size.jadetex = 15000\nsave_size.pdfjadetex = 15000\n"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:649(para) 
msgid "When using JadeTeX to build the PostgreSQL documentation, you will probably need to increase some of TeX's internal parameters. These can be set in the file <filename>texmf.cnf</filename>. The following settings worked at the time of this writing: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:671(title) 
msgid "Overflow Text"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:673(para) 
msgid "Occasionally text is too wide for the printed margins, and in extreme cases, too wide for the printed page, e.g. non-wrapped text, wide tables. Overly wide text generates <quote>Overfull hbox</quote> messages in the TeX log output file, e.g. <filename>postgres-US.log</filename> or <filename>postgres-A4.log</filename>. There are 72 points in an inch so anything reported as over 72 points too wide will probably not fit on the printed page (assuming one inch margins). To find the <acronym>SGML</acronym> text causing the overflow, find the first page number mentioned above the overflow message, e.g. <literal>[50 ###]</literal> (page 50), and look at the page after that (e.g. page 51) in the <acronym>PDF</acronym> file to see the overflow text and adjust the <acronym>SGML</acronym> accordingly."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:691(title) 
msgid "Print Output via <acronym>RTF</acronym>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:693(para) 
msgid "You can also create a printable version of the <productname>PostgreSQL</productname> documentation by converting it to <acronym>RTF</acronym> and applying minor formatting corrections using an office suite. Depending on the capabilities of the particular office suite, you can then convert the documentation to PostScript of <acronym>PDF</acronym>. The procedure below illustrates this process using <productname>Applixware</productname>."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:704(para) 
msgid "It appears that current versions of the <productname>PostgreSQL</productname> documentation trigger some bug in or exceed the size limit of OpenJade. If the build process of the <acronym>RTF</acronym> version hangs for a long time and the output file still has size 0, then you might have hit that problem. (But keep in mind that a normal build takes 5 to 10 minutes, so don't abort too soon.)"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:715(title) 
msgid "<productname>Applixware</productname><acronym>RTF</acronym> Cleanup"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:717(para) 
msgid "<application>OpenJade</application> omits specifying a default style for body text. In the past, this undiagnosed problem led to a long process of table of contents generation. However, with great help from the <productname>Applixware</productname> folks the symptom was diagnosed and a workaround is available."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:726(para) 
msgid "Generate the <acronym>RTF</acronym> version by typing: <screen>\n<prompt>doc/src/sgml$ </prompt><userinput>gmake postgres.rtf</userinput>\n</screen>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:735(para) 
msgid "Repair the RTF file to correctly specify all styles, in particular the default style. If the document contains <sgmltag>refentry</sgmltag> sections, one must also replace formatting hints which tie a preceding paragraph to the current paragraph, and instead tie the current paragraph to the following one. A utility, <command>fixrtf</command>, is available in <filename>doc/src/sgml</filename> to accomplish these repairs: <screen>\n<prompt>doc/src/sgml$ </prompt><userinput>./fixrtf --refentry postgres.rtf</userinput>\n</screen>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:749(para) 
msgid "The script adds <literal>{\\s0 Normal;}</literal> as the zeroth style in the document. According to <productname>Applixware</productname>, the RTF standard would prohibit adding an implicit zeroth style, though Microsoft Word happens to handle this case. For repairing <sgmltag>refentry</sgmltag> sections, the script replaces <literal>\\keepn</literal> tags with <literal>\\keep</literal>."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:761(para) 
msgid "Open a new document in <productname>Applixware Words</productname> and then import the <acronym>RTF</acronym> file."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:768(para) 
msgid "Generate a new table of contents (ToC) using <productname>Applixware</productname>."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:775(para) 
msgid "Select the existing ToC lines, from the beginning of the first character on the first line to the last character of the last line."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:783(para) 
msgid "Build a new ToC using <menuchoice><guimenu>Tools</guimenu><guisubmenu>Book Building</guisubmenu><guimenuitem>Create Table of Contents</guimenuitem></menuchoice>. Select the first three levels of headers for inclusion in the ToC. This will replace the existing lines imported in the RTF with a native <productname>Applixware</productname> ToC."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:795(para) 
msgid "Adjust the ToC formatting by using <menuchoice><guimenu>Format</guimenu><guimenuitem>Style</guimenuitem></menuchoice>, selecting each of the three ToC styles, and adjusting the indents for <literal>First</literal> and <literal>Left</literal>. Use the following values: <informaltable><tgroup cols=\"3\"><thead><row><entry>Style</entry><entry>First Indent (inches)</entry><entry>Left Indent (inches)</entry></row></thead><tbody><row><entry><literal>TOC-Heading 1</literal></entry><entry><literal>0.4</literal></entry><entry><literal>0.4</literal></entry></row><row><entry><literal>TOC-Heading 2</literal></entry><entry><literal>0.8</literal></entry><entry><literal>0.8</literal></entry></row><row><entry><literal>TOC-Heading 3</literal></entry><entry><literal>1.2</literal></entry><entry><literal>1.2</literal></entry></row></tbody></tgroup></informaltable>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:844(para) 
msgid "Adjust page breaks."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:850(para) 
msgid "Adjust table column widths."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:839(para) 
msgid "Work through the document to: <placeholder-1/>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:859(para) 
msgid "Replace the right-justified page numbers in the Examples and Figures portions of the ToC with correct values. This only takes a few minutes."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:867(para) 
msgid "Delete the index section from the document if it is empty."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:873(para) 
msgid "Regenerate and adjust the table of contents."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:879(para) 
msgid "Select the ToC field."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:885(para) 
msgid "Select <menuchoice><guimenu>Tools</guimenu><guisubmenu>Book Building</guisubmenu><guimenuitem>Create Table of Contents</guimenuitem></menuchoice>."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:893(para) 
msgid "Unbind the ToC by selecting <menuchoice><guimenu>Tools</guimenu><guisubmenu>Field Editing</guisubmenu><guimenuitem>Unprotect</guimenuitem></menuchoice>."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:901(para) 
msgid "Delete the first line in the ToC, which is an entry for the ToC itself."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:910(para) 
msgid "Save the document as native <productname>Applixware Words</productname> format to allow easier last minute editing later."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:918(para) 
msgid "<quote>Print</quote> the document to a file in PostScript format."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:927(title) 
msgid "Plain Text Files"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:929(para) 
msgid "Several files are distributed as plain text, for reading during the installation process. The <filename>INSTALL</filename> file corresponds to <xref linkend=\"installation\"/>, with some minor changes to account for the different context. To recreate the file, change to the directory <filename>doc/src/sgml</filename> and enter <userinput>gmake INSTALL</userinput>. This will create a file <filename>INSTALL.html</filename> that can be saved as text with <productname>Netscape Navigator</productname> and put into the place of the existing file. <productname>Netscape</productname> seems to offer the best quality for <acronym>HTML</acronym> to text conversions (over <application>lynx</application> and <application>w3m</application>)."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:945(para) 
msgid "The file <filename>HISTORY</filename> can be created similarly, using the command <userinput>gmake HISTORY</userinput>. For the file <filename>src/test/regress/README</filename> the command is <userinput>gmake regress_README</userinput>."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:954(title) 
msgid "Syntax Check"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:956(para) 
msgid "Building the documentation can take very long. But there is a method to just check the correct syntax of the documentation files, which only takes a few seconds: <screen>\n<prompt>doc/src/sgml$ </prompt><userinput>gmake check</userinput>\n</screen>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:969(title) 
msgid "Documentation Authoring"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:971(para) 
msgid "<acronym>SGML</acronym> and <productname>DocBook</productname> do not suffer from an oversupply of open-source authoring tools. The most common tool set is the <productname>Emacs</productname>/<productname>XEmacs</productname> editor with appropriate editing mode. On some systems these tools are provided in a typical full installation."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:981(title) 
msgid "Emacs/PSGML"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:983(para) 
msgid "<productname>PSGML</productname> is the most common and most powerful mode for editing <acronym>SGML</acronym> documents. When properly configured, it will allow you to use <application>Emacs</application> to insert tags and check markup consistency. You could use it for <acronym>HTML</acronym> as well. Check the <ulink url=\"http://www.lysator.liu.se/projects/about_psgml.html\"> PSGML web site</ulink> for downloads, installation instructions, and detailed documentation."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:994(para) 
msgid "There is one important thing to note with <productname>PSGML</productname>: its author assumed that your main <acronym>SGML</acronym><acronym>DTD</acronym> directory would be <filename>/usr/local/lib/sgml</filename>. If, as in the examples in this chapter, you use <filename>/usr/local/share/sgml</filename>, you have to compensate for this, either by setting <envar>SGML_CATALOG_FILES</envar> environment variable, or you can customize your <productname>PSGML</productname> installation (its manual tells you how)."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1012(programlisting) 
#, no-wrap
msgid "\n; ********** for SGML mode (psgml)\n\n(setq sgml-omittag t)\n(setq sgml-shorttag t)\n(setq sgml-minimize-attributes nil)\n(setq sgml-always-quote-attributes t)\n(setq sgml-indent-step 1)\n(setq sgml-indent-data t)\n(setq sgml-parent-document nil)\n(setq sgml-exposed-tags nil)\n(setq sgml-catalog-files '(\"/usr/local/share/sgml/catalog\"))\n\n(autoload 'sgml-mode \"psgml\" \"Major mode to edit SGML files.\" t )\n"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1031(programlisting) 
#, no-wrap
msgid "\n(setq\n  auto-mode-alist\n  '((\"\\\\.sgml$\" . sgml-mode)\n   ))\n"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1007(para) 
msgid "Put the following in your <filename>~/.emacs</filename> environment file (adjusting the path names to be appropriate for your system): <placeholder-1/> and in the same file add an entry for <acronym>SGML</acronym> into the (existing) definition for <varname>auto-mode-alist</varname>: <placeholder-2/>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1048(programlisting) 
#, no-wrap
msgid "\n&lt;!DOCTYPE appendix PUBLIC \"-//OASIS//DTD DocBook V4.2//EN\"&gt;\n"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1039(para) 
msgid "You might find that when using <productname>PSGML</productname>, a comfortable way of working with these separate files of book parts is to insert a proper <literal>DOCTYPE</literal> declaration while you're editing them. If you are working on this source, for instance, it is an appendix chapter, so you would specify the document as an <quote>appendix</quote> instance of a DocBook document by making the first line look like this: <placeholder-1/> This means that anything and everything that reads <acronym>SGML</acronym> will get it right, and I can verify the document with <command>nsgmls -s docguide.sgml</command>. (But you need to take out that line before building the entire documentation set.)"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1061(title) 
msgid "Other Emacs Modes"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1063(para) 
msgid "<productname>GNU Emacs</productname> ships with a different <acronym>SGML</acronym> mode, which is not quite as powerful as <productname>PSGML</productname>, but it's less confusing and lighter weight. Also, it offers syntax highlighting (font lock), which can be very helpful. <filename>src/tools/editors/emacs.samples</filename> contains sample settings for this mode."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1073(para) 
msgid "Norm Walsh offers a <ulink url=\"http://nwalsh.com/emacs/docbookide/index.html\">major mode</ulink> specifically for DocBook which also has font-lock and a number of features to reduce typing."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1085(title) 
msgid "Style Guide"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1088(title) 
msgid "Reference Pages"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1090(para) 
msgid "Reference pages should follow a standard layout. This allows users to find the desired information more quickly, and it also encourages writers to document all relevant aspects of a command. Consistency is not only desired among <productname>PostgreSQL</productname> reference pages, but also with reference pages provided by the operating system and other packages. Hence the following guidelines have been developed. They are for the most part consistent with similar guidelines established by various operating systems."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1111(term) 
msgid "Name"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1113(para) 
msgid "This section is generated automatically. It contains the command name and a half-sentence summary of its functionality."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1121(term) 
msgid "Synopsis"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1123(para) 
msgid "This section contains the syntax diagram of the command. The synopsis should normally not list each command-line option; that is done below. Instead, list the major components of the command line, such as where input and output files go."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1133(term) 
msgid "Description"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1135(para) 
msgid "Several paragraphs explaining what the command does."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1142(term) 
msgid "Options"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1144(para) 
msgid "A list describing each command-line option. If there are a lot of options, subsections can be used."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1152(term) 
msgid "Exit Status"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1154(para) 
msgid "If the program uses 0 for success and non-zero for failure, then you do not need to document it. If there is a meaning behind the different non-zero exit codes, list them here."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1163(term) 
msgid "Usage"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1165(para) 
msgid "Describe any sublanguage or run-time interface of the program. If the program is not interactive, this section can usually be omitted. Otherwise, this section is a catch-all for describing run-time features. Use subsections if appropriate."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1175(term) 
msgid "Environment"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1177(para) 
msgid "List all environment variables that the program might use. Try to be complete; even seemingly trivial variables like <envar>SHELL</envar> might be of interest to the user."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1186(term) 
msgid "Files"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1188(para) 
msgid "List any files that the program might access implicitly. That is, do not list input and output files that were specified on the command line, but list configuration files, etc."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1197(term) 
msgid "Diagnostics"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1199(para) 
msgid "Explain any unusual output that the program might create. Refrain from listing every possible error message. This is a lot of work and has little use in practice. But if, say, the error messages have a standard format that the user can parse, this would be the place to explain it."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1210(term) 
msgid "Notes"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1212(para) 
msgid "Anything that doesn't fit elsewhere, but in particular bugs, implementation flaws, security considerations, compatibility issues."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1221(term) /tmp/cicero-HnEQ/docguide.xml:1223(para) 
msgid "Examples"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1230(term) 
msgid "History"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1232(para) 
msgid "If there were some major milestones in the history of the program, they might be listed here. Usually, this section can be omitted."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1241(term) 
msgid "See Also"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1243(para) 
msgid "Cross-references, listed in the following order: other <productname>PostgreSQL</productname> command reference pages, <productname>PostgreSQL</productname> SQL command reference pages, citation of <productname>PostgreSQL</productname> manuals, other reference pages (e.g., operating system, other packages), other documentation. Items in the same group are listed alphabetically."
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1102(para) 
msgid "Reference pages that describe executable commands should contain the following sections, in this order. Sections that do not apply can be omitted. Additional top-level sections should only be used in special circumstances; often that information belongs in the <quote>Usage</quote> section. <placeholder-1/>"
msgstr ""

#: /tmp/cicero-HnEQ/docguide.xml:1258(para) 
msgid "Reference pages describing SQL commands should contain the following sections: Name, Synopsis, Description, Parameters, Outputs, Notes, Examples, Compatibility, History, See Also. The Parameters section is like the Options section, but there is more freedom about which clauses of the command can be listed. The Outputs section is only needed if the command returns something other than a default command-completion tag. The Compatibility section should explain to what extent this command conforms to the SQL standard(s), or to which other database system it is compatible. The See Also section of SQL commands should list SQL commands before cross-references to programs."
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2.
#: /tmp/cicero-HnEQ/docguide.xml:0(None) 
msgid "translator-credits"
msgstr ""

